KCPSM6 Assembler log file for program 'C:\Users\J\Desktop\Lab 6\picoblaze\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 24 Mar 2022
Assembly timestamp: 16:44:34

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 068 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 105
Memory locations available: 3991


Assembly listing

 Addr Code                     Instruction

 000                           ;================================================================
 000                           ; Port address definitions...
 000                           ;================================================================
 000                           CONSTANT switches, 00             ; Switch read port
 000                           CONSTANT leds, 01                 ; LED write port
 000                           CONSTANT uart_data_rx, 02         ; UART receive read port
 000                           CONSTANT uart_data_tx, 03         ; UART transmit write port
 000                           CONSTANT data_present, 04         ; UART stat read port, lsb
 000                           CONSTANT buffer_full, 05          ; UART stat read port, lsb
 000                           ;================================================================
 000                           ; Useful constant declarations...
 000                           ;================================================================
 000                           CONSTANT all_clear, 00            ; define all clear
 000                           CONSTANT all_set, FF              ; define all set
 000                           CONSTANT ascii_NUL, 00            ; ascii code (null character)
 000                           CONSTANT ascii_SOH, 01            ; ascii code (start of header)
 000                           CONSTANT ascii_STX, 02            ; ascii code (start of text)
 000                           CONSTANT ascii_ETX, 03            ; ascii code (end of text)
 000                           CONSTANT ascii_EOT, 04            ; ascii code (end of xmit)
 000                           CONSTANT ascii_ENQ, 05            ; ascii code (enquiry)
 000                           CONSTANT ascii_ACK, 06            ; ascii code (acknowledge)
 000                           CONSTANT ascii_BEL, 07            ; ascii code (bell)
 000                           CONSTANT ascii_BS, 08             ; ascii code (backspace)
 000                           CONSTANT ascii_HT, 09             ; ascii code (horiz tab)
 000                           CONSTANT ascii_LF, 0A             ; ascii code (line feed)
 000                           CONSTANT ascii_VT, 0B             ; ascii code (vert tab)
 000                           CONSTANT ascii_FF, 0C             ; ascii code (form feed)
 000                           CONSTANT ascii_CR, 0D             ; ascii code (carriage return)
 000                           CONSTANT ascii_SO, 0E             ; ascii code (shift out)
 000                           CONSTANT ascii_SI, 0F             ; ascii code (shift in)
 000                           CONSTANT ascii_DLE, 10            ; ascii code (data link esc)
 000                           CONSTANT ascii_DC1, 11            ; ascii code (device ctrl 1, xon)
 000                           CONSTANT ascii_DC2, 12            ; ascii code (device ctrl 2)
 000                           CONSTANT ascii_DC3, 13            ; ascii code (device ctrl 3, xoff)
 000                           CONSTANT ascii_DC4, 14            ; ascii code (device ctrl 4)
 000                           CONSTANT ascii_NAK, 15            ; ascii code (negative acknowledge)
 000                           CONSTANT ascii_SYN, 16            ; ascii code (sync idle)
 000                           CONSTANT ascii_ETB, 17            ; ascii code (end xmit block)
 000                           CONSTANT ascii_CAN, 18            ; ascii code (cancel)
 000                           CONSTANT ascii_EM, 19             ; ascii code (end of medium)
 000                           CONSTANT ascii_SUB, 1A            ; ascii code (substitute)
 000                           CONSTANT ascii_ESC, 1B            ; ascii code (escape)
 000                           CONSTANT ascii_FS, 1C             ; ascii code (file separator)
 000                           CONSTANT ascii_GS, 1D             ; ascii code (group separator)
 000                           CONSTANT ascii_RS, 1E             ; ascii code (record separator)
 000                           CONSTANT ascii_US, 1F             ; ascii code (unit space)
 000                           CONSTANT ascii_SPACE, 20          ; ascii code
 000                           CONSTANT ascii_EXCLAIM, 21        ; ascii code
 000                           CONSTANT ascii_DBLQUOT, 22        ; ascii code
 000                           CONSTANT ascii_NUMSIGN, 23        ; ascii code
 000                           CONSTANT ascii_DOLLAR, 24         ; ascii code
 000                           CONSTANT ascii_PERCENT, 25        ; ascii code
 000                           CONSTANT ascii_AMP, 26            ; ascii code
 000                           CONSTANT ascii_SINQUOT, 27        ; ascii code
 000                           CONSTANT ascii_LPAREN, 28         ; ascii code
 000                           CONSTANT ascii_RPAREN, 29         ; ascii code
 000                           CONSTANT ascii_ASTERISK, 2A       ; ascii code
 000                           CONSTANT ascii_PLUS, 2B           ; ascii code
 000                           CONSTANT ascii_COMMA, 2C          ; ascii code
 000                           CONSTANT ascii_MINUS, 2D          ; ascii code
 000                           CONSTANT ascii_PERIOD, 2E         ; ascii code
 000                           CONSTANT ascii_FWDSLASH, 2F       ; ascii code
 000                           CONSTANT ascii_0, 30              ; ascii code
 000                           CONSTANT ascii_1, 31              ; ascii code
 000                           CONSTANT ascii_2, 32              ; ascii code
 000                           CONSTANT ascii_3, 33              ; ascii code
 000                           CONSTANT ascii_4, 34              ; ascii code
 000                           CONSTANT ascii_5, 35              ; ascii code
 000                           CONSTANT ascii_6, 36              ; ascii code
 000                           CONSTANT ascii_7, 37              ; ascii code
 000                           CONSTANT ascii_8, 38              ; ascii code
 000                           CONSTANT ascii_9, 39              ; ascii code
 000                           CONSTANT ascii_COLON, 3A          ; ascii code
 000                           CONSTANT ascii_SEMI, 3B           ; ascii code
 000                           CONSTANT ascii_LESS, 3C           ; ascii code
 000                           CONSTANT ascii_EQUAL, 3D          ; ascii code
 000                           CONSTANT ascii_GREATER, 3E        ; ascii code
 000                           CONSTANT ascii_QUESTION, 3F       ; ascii code
 000                           CONSTANT ascii_CIRCAT, 40         ; ascii code
 000                           CONSTANT ascii_A, 41              ; ascii code
 000                           CONSTANT ascii_B, 42              ; ascii code
 000                           CONSTANT ascii_C, 43              ; ascii code
 000                           CONSTANT ascii_D, 44              ; ascii code
 000                           CONSTANT ascii_E, 45              ; ascii code
 000                           CONSTANT ascii_F, 46              ; ascii code
 000                           CONSTANT ascii_G, 47              ; ascii code
 000                           CONSTANT ascii_H, 48              ; ascii code
 000                           CONSTANT ascii_I, 49              ; ascii code
 000                           CONSTANT ascii_J, 4A              ; ascii code
 000                           CONSTANT ascii_K, 4B              ; ascii code
 000                           CONSTANT ascii_L, 4C              ; ascii code
 000                           CONSTANT ascii_M, 4D              ; ascii code
 000                           CONSTANT ascii_N, 4E              ; ascii code
 000                           CONSTANT ascii_O, 4F              ; ascii code
 000                           CONSTANT ascii_P, 50              ; ascii code
 000                           CONSTANT ascii_Q, 51              ; ascii code
 000                           CONSTANT ascii_R, 52              ; ascii code
 000                           CONSTANT ascii_S, 53              ; ascii code
 000                           CONSTANT ascii_T, 54              ; ascii code
 000                           CONSTANT ascii_U, 55              ; ascii code
 000                           CONSTANT ascii_V, 56              ; ascii code
 000                           CONSTANT ascii_W, 57              ; ascii code
 000                           CONSTANT ascii_X, 58              ; ascii code
 000                           CONSTANT ascii_Y, 59              ; ascii code
 000                           CONSTANT ascii_Z, 5A              ; ascii code
 000                           CONSTANT ascii_LBKT, 5B           ; ascii code
 000                           CONSTANT ascii_BKSLASH, 5C        ; ascii code
 000                           CONSTANT ascii_RBKT, 5D           ; ascii code
 000                           CONSTANT ascii_CARET, 5E          ; ascii code
 000                           CONSTANT ascii_UNDER, 5F          ; ascii code
 000                           CONSTANT ascii_TICK, 60           ; ascii code
 000                           CONSTANT ascii_a, 61              ; ascii code
 000                           CONSTANT ascii_b, 62              ; ascii code
 000                           CONSTANT ascii_c, 63              ; ascii code
 000                           CONSTANT ascii_d, 64              ; ascii code
 000                           CONSTANT ascii_e, 65              ; ascii code
 000                           CONSTANT ascii_f, 66              ; ascii code
 000                           CONSTANT ascii_g, 67              ; ascii code
 000                           CONSTANT ascii_h, 68              ; ascii code
 000                           CONSTANT ascii_i, 69              ; ascii code
 000                           CONSTANT ascii_j, 6A              ; ascii code
 000                           CONSTANT ascii_k, 6B              ; ascii code
 000                           CONSTANT ascii_l, 6C              ; ascii code
 000                           CONSTANT ascii_m, 6D              ; ascii code
 000                           CONSTANT ascii_n, 6E              ; ascii code
 000                           CONSTANT ascii_o, 6F              ; ascii code
 000                           CONSTANT ascii_p, 70              ; ascii code
 000                           CONSTANT ascii_q, 71              ; ascii code
 000                           CONSTANT ascii_r, 72              ; ascii code
 000                           CONSTANT ascii_s, 73              ; ascii code
 000                           CONSTANT ascii_t, 74              ; ascii code
 000                           CONSTANT ascii_u, 75              ; ascii code
 000                           CONSTANT ascii_v, 76              ; ascii code
 000                           CONSTANT ascii_w, 77              ; ascii code
 000                           CONSTANT ascii_x, 78              ; ascii code
 000                           CONSTANT ascii_y, 79              ; ascii code
 000                           CONSTANT ascii_z, 7A              ; ascii code
 000                           CONSTANT ascii_LBRACE, 7B         ; ascii code
 000                           CONSTANT ascii_VBAR, 7C           ; ascii code
 000                           CONSTANT ascii_RBRACE, 7D         ; ascii code
 000                           CONSTANT ascii_TILDE, 7E          ; ascii code
 000                           CONSTANT ascii_DEL, 7F            ; ascii code
 000                           ;================================================================
 000                           ; Actual assembly program goes here...
 000                           ;
 000                           ; NOTE: size limit is 4096 lines of actual assembly code
 000                           ;       Old documentation says it is 1024. This is now incorrect.
 000                           ;================================================================
 000  00000        cold_start: LOAD s0, s0                       ; (nop)
 001                           ; Code 1
 001                           ; Write code to output a message to the
 001                           ; serial port.  The message must be longer
 001                           ; than 25 characters.
 001  01057                    LOAD s0, 57[ascii_W]              ;W
 002  2D003                    OUTPUT s0, 03[uart_data_tx]
 003  2F000                    STORE s0, 00
 004  01065                    LOAD s0, 65[ascii_e]              ;e
 005  2D003                    OUTPUT s0, 03[uart_data_tx]
 006  2F001                    STORE s0, 01
 007  0106C                    LOAD s0, 6C[ascii_l]              ;l
 008  2D003                    OUTPUT s0, 03[uart_data_tx]
 009  2F002                    STORE s0, 02
 00A  00000                    LOAD s0, s0
 00B  01063                    LOAD s0, 63[ascii_c]              ;c
 00C  2D003                    OUTPUT s0, 03[uart_data_tx]
 00D  2F003                    STORE s0, 03
 00E  0106F                    LOAD s0, 6F[ascii_o]              ;o
 00F  2D003                    OUTPUT s0, 03[uart_data_tx]
 010  2F004                    STORE s0, 04
 011  0106D                    LOAD s0, 6D[ascii_m]              ;m
 012  2D003                    OUTPUT s0, 03[uart_data_tx]
 013  2F005                    STORE s0, 05
 014  01065                    LOAD s0, 65[ascii_e]              ;e
 015  2D003                    OUTPUT s0, 03[uart_data_tx]
 016  2F006                    STORE s0, 06
 017  01020                    LOAD s0, 20[ascii_SPACE]          ;
 018  2D003                    OUTPUT s0, 03[uart_data_tx]
 019  2F007                    STORE s0, 07
 01A  01074                    LOAD s0, 74[ascii_t]              ;t
 01B  2D003                    OUTPUT s0, 03[uart_data_tx]
 01C  2F008                    STORE s0, 08
 01D  0106F                    LOAD s0, 6F[ascii_o]              ;o
 01E  2D003                    OUTPUT s0, 03[uart_data_tx]
 01F  2F009                    STORE s0, 09
 020  01020                    LOAD s0, 20[ascii_SPACE]          ;
 021  2D003                    OUTPUT s0, 03[uart_data_tx]
 022  2F00A                    STORE s0, 0A
 023  0104C                    LOAD s0, 4C[ascii_L]              ;L
 024  2D003                    OUTPUT s0, 03[uart_data_tx]
 025  2F00B                    STORE s0, 0B
 026  0106F                    LOAD s0, 6F[ascii_o]              ;o
 027  2D003                    OUTPUT s0, 03[uart_data_tx]
 028  2F00C                    STORE s0, 0C
 029  0106F                    LOAD s0, 6F[ascii_o]              ;o
 02A  2D003                    OUTPUT s0, 03[uart_data_tx]
 02B  2F00D                    STORE s0, 0D
 02C  01070                    LOAD s0, 70[ascii_p]              ;p
 02D  2D003                    OUTPUT s0, 03[uart_data_tx]
 02E  2F00E                    STORE s0, 0E
 02F  01062                    LOAD s0, 62[ascii_b]              ;b
 030  2D003                    OUTPUT s0, 03[uart_data_tx]
 031  2F00F                    STORE s0, 0F
 032  01061                    LOAD s0, 61[ascii_a]              ;a
 033  2D003                    OUTPUT s0, 03[uart_data_tx]
 034  2F010                    STORE s0, 10
 035  01063                    LOAD s0, 63[ascii_c]              ;c
 036  2D003                    OUTPUT s0, 03[uart_data_tx]
 037  2F011                    STORE s0, 11
 038  0106B                    LOAD s0, 6B[ascii_k]              ;k
 039  2D003                    OUTPUT s0, 03[uart_data_tx]
 03A  2F012                    STORE s0, 12
 03B  01021                    LOAD s0, 21[ascii_EXCLAIM]        ;!
 03C  2D003                    OUTPUT s0, 03[uart_data_tx]
 03D  2F013                    STORE s0, 13
 03E  00000                    LOAD s0, s0
 03F                     main: 
 03F  06000                    XOR s0, s0
 040              next_letter: 
 040  01540                    LOAD s5, 40
 041  0A450                    FETCH s4, (s5)
 042  1D414                    COMPARE s4, 14
 043  22051                    JUMP 051[led_echo]
 044  11401                    ADD s4, 01
 045  2F440                    STORE s4, 40
 046  09305                    INPUT s3, 05[buffer_full]
 047  1D301                    COMPARE s3, 01
 048  3204F                    JUMP Z, 04F[buffer_full_call]
 049  0A300                    FETCH s3, (s0)
 04A  11001                    ADD s0, 01
 04B             ready_buffer: 
 04B  2D103                    OUTPUT s1, 03[uart_data_tx]
 04C  1D014                    COMPARE s0, 14
 04D  36040                    JUMP NZ, 040[next_letter]
 04E  22051                    JUMP 051[led_echo]
 04F         buffer_full_call: 
 04F  00FF0                    LOAD sF, sF
 050  22040                    JUMP 040[next_letter]
 051  00000          led_echo: LOAD s0, s0                       ; (nop)
 052                           ; Code 2
 052                           ; Write code to read the switch state and
 052                           ; write it, inverted, to the LED output port.
 052  09000                    INPUT s0, 00[switches]
 053  28000                    DISABLE INTERRUPT
 054  070FF                    XOR s0, FF
 055  2D001                    OUTPUT s0, 01[leds]
 056  28001                    ENABLE INTERRUPT
 057  22058                    JUMP 058[rs232_echo]
 058  00000        rs232_echo: LOAD s0, s0                       ; (nop)
 059                           ; Code 3
 059                           ; Write code to check if a byte has been
 059                           ; received by the uart.  If so, write it
 059                           ; back to the uart transmit port.  Then...
 059                           NAMEREG sF, dr
 059                           NAMEREG sE, Data
 059                   BEGIN1: 
 059  09F04                    INPUT sF[dr], 04[data_present]
 05A  0DF01                    TEST sF[dr], 01
 05B  3805D                    CALL C, 05D[SEND]
 05C  22059                    JUMP 059[BEGIN1]
 05D                     SEND: 
 05D  09E02                    INPUT sE[Data], 02[uart_data_rx]
 05E  1D005                    COMPARE s0, 05[buffer_full]
 05F  2DE03                    OUTPUT sE[Data], 03[uart_data_tx]
 060  06110                    XOR s1, s1
 061  06220                    XOR s2, s2
 062  09102                    INPUT s1, 02[uart_data_rx]
 063  09204                    INPUT s2, 04[data_present]
 064  1D201                    COMPARE s2, 01
 065  32067                    JUMP Z, 067[send_back]
 066  22051                    JUMP 051[led_echo]                ; endless loop
 067                           ; xor s1, s1
 067                           ; xor s2, s2
 067                           ; input s1, uart_data_rx
 067                           ; input s2, data_present
 067                           ; compare s2, 01
 067                           ; jump z, send_back
 067                           ; jump led_echo
 067                send_back: 
 067  2D103                    OUTPUT s1, 03[uart_data_tx]
 068  22051                    JUMP 051[led_echo]
 069                           ;================================================================
 069                           ;
 069                           ;================================================================


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\J\Desktop\Lab 6\picoblaze\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   16'd         
 timestamp_minutes 44'd         
 timestamp_seconds 34'd         
 datestamp_year    22'd         
 datestamp_month   3'd          
 datestamp_day     24'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           program.psm
 leds              01           program.psm
 uart_data_rx      02           program.psm
 uart_data_tx      03           program.psm
 data_present      04           program.psm
 buffer_full       05           program.psm
 all_clear         00           program.psm
 all_set           FF           program.psm
 ascii_NUL         00           program.psm
 ascii_SOH         01           program.psm
 ascii_STX         02           program.psm
 ascii_ETX         03           program.psm
 ascii_EOT         04           program.psm
 ascii_ENQ         05           program.psm
 ascii_ACK         06           program.psm
 ascii_BEL         07           program.psm
 ascii_BS          08           program.psm
 ascii_HT          09           program.psm
 ascii_LF          0A           program.psm
 ascii_VT          0B           program.psm
 ascii_FF          0C           program.psm
 ascii_CR          0D           program.psm
 ascii_SO          0E           program.psm
 ascii_SI          0F           program.psm
 ascii_DLE         10           program.psm
 ascii_DC1         11           program.psm
 ascii_DC2         12           program.psm
 ascii_DC3         13           program.psm
 ascii_DC4         14           program.psm
 ascii_NAK         15           program.psm
 ascii_SYN         16           program.psm
 ascii_ETB         17           program.psm
 ascii_CAN         18           program.psm
 ascii_EM          19           program.psm
 ascii_SUB         1A           program.psm
 ascii_ESC         1B           program.psm
 ascii_FS          1C           program.psm
 ascii_GS          1D           program.psm
 ascii_RS          1E           program.psm
 ascii_US          1F           program.psm
 ascii_SPACE       20           program.psm
 ascii_EXCLAIM     21           program.psm
 ascii_DBLQUOT     22           program.psm
 ascii_NUMSIGN     23           program.psm
 ascii_DOLLAR      24           program.psm
 ascii_PERCENT     25           program.psm
 ascii_AMP         26           program.psm
 ascii_SINQUOT     27           program.psm
 ascii_LPAREN      28           program.psm
 ascii_RPAREN      29           program.psm
 ascii_ASTERISK    2A           program.psm
 ascii_PLUS        2B           program.psm
 ascii_COMMA       2C           program.psm
 ascii_MINUS       2D           program.psm
 ascii_PERIOD      2E           program.psm
 ascii_FWDSLASH    2F           program.psm
 ascii_0           30           program.psm
 ascii_1           31           program.psm
 ascii_2           32           program.psm
 ascii_3           33           program.psm
 ascii_4           34           program.psm
 ascii_5           35           program.psm
 ascii_6           36           program.psm
 ascii_7           37           program.psm
 ascii_8           38           program.psm
 ascii_9           39           program.psm
 ascii_COLON       3A           program.psm
 ascii_SEMI        3B           program.psm
 ascii_LESS        3C           program.psm
 ascii_EQUAL       3D           program.psm
 ascii_GREATER     3E           program.psm
 ascii_QUESTION    3F           program.psm
 ascii_CIRCAT      40           program.psm
 ascii_A           41           program.psm
 ascii_B           42           program.psm
 ascii_C           43           program.psm
 ascii_D           44           program.psm
 ascii_E           45           program.psm
 ascii_F           46           program.psm
 ascii_G           47           program.psm
 ascii_H           48           program.psm
 ascii_I           49           program.psm
 ascii_J           4A           program.psm
 ascii_K           4B           program.psm
 ascii_L           4C           program.psm
 ascii_M           4D           program.psm
 ascii_N           4E           program.psm
 ascii_O           4F           program.psm
 ascii_P           50           program.psm
 ascii_Q           51           program.psm
 ascii_R           52           program.psm
 ascii_S           53           program.psm
 ascii_T           54           program.psm
 ascii_U           55           program.psm
 ascii_V           56           program.psm
 ascii_W           57           program.psm
 ascii_X           58           program.psm
 ascii_Y           59           program.psm
 ascii_Z           5A           program.psm
 ascii_LBKT        5B           program.psm
 ascii_BKSLASH     5C           program.psm
 ascii_RBKT        5D           program.psm
 ascii_CARET       5E           program.psm
 ascii_UNDER       5F           program.psm
 ascii_TICK        60           program.psm
 ascii_a           61           program.psm
 ascii_b           62           program.psm
 ascii_c           63           program.psm
 ascii_d           64           program.psm
 ascii_e           65           program.psm
 ascii_f           66           program.psm
 ascii_g           67           program.psm
 ascii_h           68           program.psm
 ascii_i           69           program.psm
 ascii_j           6A           program.psm
 ascii_k           6B           program.psm
 ascii_l           6C           program.psm
 ascii_m           6D           program.psm
 ascii_n           6E           program.psm
 ascii_o           6F           program.psm
 ascii_p           70           program.psm
 ascii_q           71           program.psm
 ascii_r           72           program.psm
 ascii_s           73           program.psm
 ascii_t           74           program.psm
 ascii_u           75           program.psm
 ascii_v           76           program.psm
 ascii_w           77           program.psm
 ascii_x           78           program.psm
 ascii_y           79           program.psm
 ascii_z           7A           program.psm
 ascii_LBRACE      7B           program.psm
 ascii_VBAR        7C           program.psm
 ascii_RBRACE      7D           program.psm
 ascii_TILDE       7E           program.psm
 ascii_DEL         7F           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "24 Mar 2022"  
 timestamp$        "16:44:34"     



List of line labels

   Label              Addr  Source PSM File

 * cold_start         000   program.psm
 * main               03F   program.psm
   next_letter        040   program.psm
 * ready_buffer       04B   program.psm
   buffer_full_call   04F   program.psm
   led_echo           051   program.psm
   rs232_echo         058   program.psm
   BEGIN1             059   program.psm
   SEND               05D   program.psm
   send_back          067   program.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             27
 STAR              -

 AND               -
 OR                -
 XOR               4

 ADD               2
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              1
 TESTCY            -
 COMPARE           5
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             6
 OUTPUT           24
 OUTPUTK           -

 STORE             2
 FETCH             2

 DISABLE           1
 ENABLE            1
 RETURNI           -

 JUMP             10
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
