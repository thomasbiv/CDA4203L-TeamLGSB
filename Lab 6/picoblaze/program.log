KCPSM6 Assembler log file for program 'C:\Users\patri\Documents\GitHub\CDA4203L-TeamLGSB\Lab 6\picoblaze\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 24 Mar 2022
Assembly timestamp: 14:53:49

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 05C hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 93
Memory locations available: 4003


Assembly listing

 Addr Code               Instruction

 000                     ;================================================================
 000                     ; Port address definitions...
 000                     ;================================================================
 000                     CONSTANT switches, 00             ; Switch read port
 000                     CONSTANT leds, 01                 ; LED write port
 000                     CONSTANT uart_data_rx, 02         ; UART receive read port
 000                     CONSTANT uart_data_tx, 03         ; UART transmit write port
 000                     CONSTANT data_present, 04         ; UART stat read port, lsb
 000                     CONSTANT buffer_full, 05          ; UART stat read port, lsb
 000                     ;================================================================
 000                     ; Useful constant declarations...
 000                     ;================================================================
 000                     CONSTANT all_clear, 00            ; define all clear
 000                     CONSTANT all_set, FF              ; define all set
 000                     CONSTANT ascii_NUL, 00            ; ascii code (null character)
 000                     CONSTANT ascii_SOH, 01            ; ascii code (start of header)
 000                     CONSTANT ascii_STX, 02            ; ascii code (start of text)
 000                     CONSTANT ascii_ETX, 03            ; ascii code (end of text)
 000                     CONSTANT ascii_EOT, 04            ; ascii code (end of xmit)
 000                     CONSTANT ascii_ENQ, 05            ; ascii code (enquiry)
 000                     CONSTANT ascii_ACK, 06            ; ascii code (acknowledge)
 000                     CONSTANT ascii_BEL, 07            ; ascii code (bell)
 000                     CONSTANT ascii_BS, 08             ; ascii code (backspace)
 000                     CONSTANT ascii_HT, 09             ; ascii code (horiz tab)
 000                     CONSTANT ascii_LF, 0A             ; ascii code (line feed)
 000                     CONSTANT ascii_VT, 0B             ; ascii code (vert tab)
 000                     CONSTANT ascii_FF, 0C             ; ascii code (form feed)
 000                     CONSTANT ascii_CR, 0D             ; ascii code (carriage return)
 000                     CONSTANT ascii_SO, 0E             ; ascii code (shift out)
 000                     CONSTANT ascii_SI, 0F             ; ascii code (shift in)
 000                     CONSTANT ascii_DLE, 10            ; ascii code (data link esc)
 000                     CONSTANT ascii_DC1, 11            ; ascii code (device ctrl 1, xon)
 000                     CONSTANT ascii_DC2, 12            ; ascii code (device ctrl 2)
 000                     CONSTANT ascii_DC3, 13            ; ascii code (device ctrl 3, xoff)
 000                     CONSTANT ascii_DC4, 14            ; ascii code (device ctrl 4)
 000                     CONSTANT ascii_NAK, 15            ; ascii code (negative acknowledge)
 000                     CONSTANT ascii_SYN, 16            ; ascii code (sync idle)
 000                     CONSTANT ascii_ETB, 17            ; ascii code (end xmit block)
 000                     CONSTANT ascii_CAN, 18            ; ascii code (cancel)
 000                     CONSTANT ascii_EM, 19             ; ascii code (end of medium)
 000                     CONSTANT ascii_SUB, 1A            ; ascii code (substitute)
 000                     CONSTANT ascii_ESC, 1B            ; ascii code (escape)
 000                     CONSTANT ascii_FS, 1C             ; ascii code (file separator)
 000                     CONSTANT ascii_GS, 1D             ; ascii code (group separator)
 000                     CONSTANT ascii_RS, 1E             ; ascii code (record separator)
 000                     CONSTANT ascii_US, 1F             ; ascii code (unit space)
 000                     CONSTANT ascii_SPACE, 20          ; ascii code
 000                     CONSTANT ascii_EXCLAIM, 21        ; ascii code
 000                     CONSTANT ascii_DBLQUOT, 22        ; ascii code
 000                     CONSTANT ascii_NUMSIGN, 23        ; ascii code
 000                     CONSTANT ascii_DOLLAR, 24         ; ascii code
 000                     CONSTANT ascii_PERCENT, 25        ; ascii code
 000                     CONSTANT ascii_AMP, 26            ; ascii code
 000                     CONSTANT ascii_SINQUOT, 27        ; ascii code
 000                     CONSTANT ascii_LPAREN, 28         ; ascii code
 000                     CONSTANT ascii_RPAREN, 29         ; ascii code
 000                     CONSTANT ascii_ASTERISK, 2A       ; ascii code
 000                     CONSTANT ascii_PLUS, 2B           ; ascii code
 000                     CONSTANT ascii_COMMA, 2C          ; ascii code
 000                     CONSTANT ascii_MINUS, 2D          ; ascii code
 000                     CONSTANT ascii_PERIOD, 2E         ; ascii code
 000                     CONSTANT ascii_FWDSLASH, 2F       ; ascii code
 000                     CONSTANT ascii_0, 30              ; ascii code
 000                     CONSTANT ascii_1, 31              ; ascii code
 000                     CONSTANT ascii_2, 32              ; ascii code
 000                     CONSTANT ascii_3, 33              ; ascii code
 000                     CONSTANT ascii_4, 34              ; ascii code
 000                     CONSTANT ascii_5, 35              ; ascii code
 000                     CONSTANT ascii_6, 36              ; ascii code
 000                     CONSTANT ascii_7, 37              ; ascii code
 000                     CONSTANT ascii_8, 38              ; ascii code
 000                     CONSTANT ascii_9, 39              ; ascii code
 000                     CONSTANT ascii_COLON, 3A          ; ascii code
 000                     CONSTANT ascii_SEMI, 3B           ; ascii code
 000                     CONSTANT ascii_LESS, 3C           ; ascii code
 000                     CONSTANT ascii_EQUAL, 3D          ; ascii code
 000                     CONSTANT ascii_GREATER, 3E        ; ascii code
 000                     CONSTANT ascii_QUESTION, 3F       ; ascii code
 000                     CONSTANT ascii_CIRCAT, 40         ; ascii code
 000                     CONSTANT ascii_A, 41              ; ascii code
 000                     CONSTANT ascii_B, 42              ; ascii code
 000                     CONSTANT ascii_C, 43              ; ascii code
 000                     CONSTANT ascii_D, 44              ; ascii code
 000                     CONSTANT ascii_E, 45              ; ascii code
 000                     CONSTANT ascii_F, 46              ; ascii code
 000                     CONSTANT ascii_G, 47              ; ascii code
 000                     CONSTANT ascii_H, 48              ; ascii code
 000                     CONSTANT ascii_I, 49              ; ascii code
 000                     CONSTANT ascii_J, 4A              ; ascii code
 000                     CONSTANT ascii_K, 4B              ; ascii code
 000                     CONSTANT ascii_L, 4C              ; ascii code
 000                     CONSTANT ascii_M, 4D              ; ascii code
 000                     CONSTANT ascii_N, 4E              ; ascii code
 000                     CONSTANT ascii_O, 4F              ; ascii code
 000                     CONSTANT ascii_P, 50              ; ascii code
 000                     CONSTANT ascii_Q, 51              ; ascii code
 000                     CONSTANT ascii_R, 52              ; ascii code
 000                     CONSTANT ascii_S, 53              ; ascii code
 000                     CONSTANT ascii_T, 54              ; ascii code
 000                     CONSTANT ascii_U, 55              ; ascii code
 000                     CONSTANT ascii_V, 56              ; ascii code
 000                     CONSTANT ascii_W, 57              ; ascii code
 000                     CONSTANT ascii_X, 58              ; ascii code
 000                     CONSTANT ascii_Y, 59              ; ascii code
 000                     CONSTANT ascii_Z, 5A              ; ascii code
 000                     CONSTANT ascii_LBKT, 5B           ; ascii code
 000                     CONSTANT ascii_BKSLASH, 5C        ; ascii code
 000                     CONSTANT ascii_RBKT, 5D           ; ascii code
 000                     CONSTANT ascii_CARET, 5E          ; ascii code
 000                     CONSTANT ascii_UNDER, 5F          ; ascii code
 000                     CONSTANT ascii_TICK, 60           ; ascii code
 000                     CONSTANT ascii_a, 61              ; ascii code
 000                     CONSTANT ascii_b, 62              ; ascii code
 000                     CONSTANT ascii_c, 63              ; ascii code
 000                     CONSTANT ascii_d, 64              ; ascii code
 000                     CONSTANT ascii_e, 65              ; ascii code
 000                     CONSTANT ascii_f, 66              ; ascii code
 000                     CONSTANT ascii_g, 67              ; ascii code
 000                     CONSTANT ascii_h, 68              ; ascii code
 000                     CONSTANT ascii_i, 69              ; ascii code
 000                     CONSTANT ascii_j, 6A              ; ascii code
 000                     CONSTANT ascii_k, 6B              ; ascii code
 000                     CONSTANT ascii_l, 6C              ; ascii code
 000                     CONSTANT ascii_m, 6D              ; ascii code
 000                     CONSTANT ascii_n, 6E              ; ascii code
 000                     CONSTANT ascii_o, 6F              ; ascii code
 000                     CONSTANT ascii_p, 70              ; ascii code
 000                     CONSTANT ascii_q, 71              ; ascii code
 000                     CONSTANT ascii_r, 72              ; ascii code
 000                     CONSTANT ascii_s, 73              ; ascii code
 000                     CONSTANT ascii_t, 74              ; ascii code
 000                     CONSTANT ascii_u, 75              ; ascii code
 000                     CONSTANT ascii_v, 76              ; ascii code
 000                     CONSTANT ascii_w, 77              ; ascii code
 000                     CONSTANT ascii_x, 78              ; ascii code
 000                     CONSTANT ascii_y, 79              ; ascii code
 000                     CONSTANT ascii_z, 7A              ; ascii code
 000                     CONSTANT ascii_LBRACE, 7B         ; ascii code
 000                     CONSTANT ascii_VBAR, 7C           ; ascii code
 000                     CONSTANT ascii_RBRACE, 7D         ; ascii code
 000                     CONSTANT ascii_TILDE, 7E          ; ascii code
 000                     CONSTANT ascii_DEL, 7F            ; ascii code
 000                     ;================================================================
 000                     ; Actual assembly program goes here...
 000                     ;
 000                     ; NOTE: size limit is 4096 lines of actual assembly code
 000                     ;       Old documentation says it is 1024. This is now incorrect.
 000                     ;================================================================
 000  00000  cold_start: LOAD s0, s0                       ; (nop)
 001                     ; Code 1
 001                     ; Write code to output a message to the
 001                     ; serial port.  The message must be longer
 001                     ; than 25 characters.
 001                     NAMEREG s3, i
 001               LOOP: 
 001  00330              LOAD s3[i], s3[i]
 002  01357              LOAD s3[i], 57[ascii_W]
 003  2D303              OUTPUT s3[i], 03[uart_data_tx]
 004  2F300              STORE s3[i], 00
 005  00330              LOAD s3[i], s3[i]
 006  01365              LOAD s3[i], 65[ascii_e]
 007  2D303              OUTPUT s3[i], 03[uart_data_tx]
 008  2F300              STORE s3[i], 00
 009  00330              LOAD s3[i], s3[i]
 00A  0136C              LOAD s3[i], 6C[ascii_l]
 00B  2D303              OUTPUT s3[i], 03[uart_data_tx]
 00C  2F300              STORE s3[i], 00
 00D  00330              LOAD s3[i], s3[i]
 00E  01363              LOAD s3[i], 63[ascii_c]
 00F  2D303              OUTPUT s3[i], 03[uart_data_tx]
 010  2F300              STORE s3[i], 00
 011  00330              LOAD s3[i], s3[i]
 012  0136F              LOAD s3[i], 6F[ascii_o]
 013  2D303              OUTPUT s3[i], 03[uart_data_tx]
 014  2F300              STORE s3[i], 00
 015  00330              LOAD s3[i], s3[i]
 016  0136D              LOAD s3[i], 6D[ascii_m]
 017  2D303              OUTPUT s3[i], 03[uart_data_tx]
 018  2F300              STORE s3[i], 00
 019  00330              LOAD s3[i], s3[i]
 01A  01365              LOAD s3[i], 65[ascii_e]
 01B  2D303              OUTPUT s3[i], 03[uart_data_tx]
 01C  2F300              STORE s3[i], 00
 01D  00330              LOAD s3[i], s3[i]
 01E  01320              LOAD s3[i], 20[ascii_SPACE]
 01F  2D303              OUTPUT s3[i], 03[uart_data_tx]
 020  2F300              STORE s3[i], 00
 021  00330              LOAD s3[i], s3[i]
 022  01374              LOAD s3[i], 74[ascii_t]
 023  2D303              OUTPUT s3[i], 03[uart_data_tx]
 024  2F300              STORE s3[i], 00
 025  00330              LOAD s3[i], s3[i]
 026  0136F              LOAD s3[i], 6F[ascii_o]
 027  2D303              OUTPUT s3[i], 03[uart_data_tx]
 028  2F300              STORE s3[i], 00
 029  00330              LOAD s3[i], s3[i]
 02A  01320              LOAD s3[i], 20[ascii_SPACE]
 02B  2D303              OUTPUT s3[i], 03[uart_data_tx]
 02C  2F300              STORE s3[i], 00
 02D  00330              LOAD s3[i], s3[i]
 02E  0134C              LOAD s3[i], 4C[ascii_L]
 02F  2D303              OUTPUT s3[i], 03[uart_data_tx]
 030  2F300              STORE s3[i], 00
 031  00330              LOAD s3[i], s3[i]
 032  0136F              LOAD s3[i], 6F[ascii_o]
 033  2D303              OUTPUT s3[i], 03[uart_data_tx]
 034  2F300              STORE s3[i], 00
 035  00330              LOAD s3[i], s3[i]
 036  0136F              LOAD s3[i], 6F[ascii_o]
 037  2D303              OUTPUT s3[i], 03[uart_data_tx]
 038  2F300              STORE s3[i], 00
 039  00330              LOAD s3[i], s3[i]
 03A  01362              LOAD s3[i], 62[ascii_b]
 03B  2D303              OUTPUT s3[i], 03[uart_data_tx]
 03C  2F300              STORE s3[i], 00
 03D  00330              LOAD s3[i], s3[i]
 03E  01361              LOAD s3[i], 61[ascii_a]
 03F  2D303              OUTPUT s3[i], 03[uart_data_tx]
 040  2F300              STORE s3[i], 00
 041  00330              LOAD s3[i], s3[i]
 042  01363              LOAD s3[i], 63[ascii_c]
 043  2D303              OUTPUT s3[i], 03[uart_data_tx]
 044  2F300              STORE s3[i], 00
 045  00330              LOAD s3[i], s3[i]
 046  0136B              LOAD s3[i], 6B[ascii_k]
 047  2D303              OUTPUT s3[i], 03[uart_data_tx]
 048  2F300              STORE s3[i], 00
 049  00330              LOAD s3[i], s3[i]
 04A  01321              LOAD s3[i], 21[ascii_EXCLAIM]
 04B  2D303              OUTPUT s3[i], 03[uart_data_tx]
 04C  2F300              STORE s3[i], 00
 04D                     ;ADD i, 01
 04D                     ;STORE s3,
 04D  00000    led_echo: LOAD s0, s0                       ; (nop)
 04E                     ; Code 2
 04E                     ; Write code to read the switch state and
 04E                     ; write it, inverted, to the LED output port.
 04E  09000              INPUT s0, 00[switches]
 04F  28000              DISABLE INTERRUPT
 050  070FF              XOR s0, FF
 051  2D001              OUTPUT s0, 01[leds]
 052  28001              ENABLE INTERRUPT
 053  22054              JUMP 054[rs232_echo]
 054  00000  rs232_echo: LOAD s0, s0                       ; (nop)
 055                     ; Code 3
 055                     ; Write code to check if a byte has been
 055                     ; received by the uart.  If so, write it
 055                     ; back to the uart transmit port.  Then...
 055                     NAMEREG sF, dr
 055                     NAMEREG sE, Data
 055             BEGIN1: 
 055  09F04              INPUT sF[dr], 04[data_present]
 056  0DF01              TEST sF[dr], 01
 057  38059              CALL C, 059[SEND]
 058  22055              JUMP 055[BEGIN1]
 059               SEND: 
 059  09E02              INPUT sE[Data], 02[uart_data_rx]
 05A  1D005              COMPARE s0, 05[buffer_full]
 05B  2DE03              OUTPUT sE[Data], 03[uart_data_tx]
 05C  2204D              JUMP 04D[led_echo]                ; endless loop
 05D                     ;================================================================
 05D                     ;
 05D                     ;================================================================


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\patri\Documents\GitHub\CDA4203L-TeamLGSB\Lab 6\picoblaze\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   14'd         
 timestamp_minutes 53'd         
 timestamp_seconds 49'd         
 datestamp_year    22'd         
 datestamp_month   3'd          
 datestamp_day     24'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           program.psm
 leds              01           program.psm
 uart_data_rx      02           program.psm
 uart_data_tx      03           program.psm
 data_present      04           program.psm
 buffer_full       05           program.psm
 all_clear         00           program.psm
 all_set           FF           program.psm
 ascii_NUL         00           program.psm
 ascii_SOH         01           program.psm
 ascii_STX         02           program.psm
 ascii_ETX         03           program.psm
 ascii_EOT         04           program.psm
 ascii_ENQ         05           program.psm
 ascii_ACK         06           program.psm
 ascii_BEL         07           program.psm
 ascii_BS          08           program.psm
 ascii_HT          09           program.psm
 ascii_LF          0A           program.psm
 ascii_VT          0B           program.psm
 ascii_FF          0C           program.psm
 ascii_CR          0D           program.psm
 ascii_SO          0E           program.psm
 ascii_SI          0F           program.psm
 ascii_DLE         10           program.psm
 ascii_DC1         11           program.psm
 ascii_DC2         12           program.psm
 ascii_DC3         13           program.psm
 ascii_DC4         14           program.psm
 ascii_NAK         15           program.psm
 ascii_SYN         16           program.psm
 ascii_ETB         17           program.psm
 ascii_CAN         18           program.psm
 ascii_EM          19           program.psm
 ascii_SUB         1A           program.psm
 ascii_ESC         1B           program.psm
 ascii_FS          1C           program.psm
 ascii_GS          1D           program.psm
 ascii_RS          1E           program.psm
 ascii_US          1F           program.psm
 ascii_SPACE       20           program.psm
 ascii_EXCLAIM     21           program.psm
 ascii_DBLQUOT     22           program.psm
 ascii_NUMSIGN     23           program.psm
 ascii_DOLLAR      24           program.psm
 ascii_PERCENT     25           program.psm
 ascii_AMP         26           program.psm
 ascii_SINQUOT     27           program.psm
 ascii_LPAREN      28           program.psm
 ascii_RPAREN      29           program.psm
 ascii_ASTERISK    2A           program.psm
 ascii_PLUS        2B           program.psm
 ascii_COMMA       2C           program.psm
 ascii_MINUS       2D           program.psm
 ascii_PERIOD      2E           program.psm
 ascii_FWDSLASH    2F           program.psm
 ascii_0           30           program.psm
 ascii_1           31           program.psm
 ascii_2           32           program.psm
 ascii_3           33           program.psm
 ascii_4           34           program.psm
 ascii_5           35           program.psm
 ascii_6           36           program.psm
 ascii_7           37           program.psm
 ascii_8           38           program.psm
 ascii_9           39           program.psm
 ascii_COLON       3A           program.psm
 ascii_SEMI        3B           program.psm
 ascii_LESS        3C           program.psm
 ascii_EQUAL       3D           program.psm
 ascii_GREATER     3E           program.psm
 ascii_QUESTION    3F           program.psm
 ascii_CIRCAT      40           program.psm
 ascii_A           41           program.psm
 ascii_B           42           program.psm
 ascii_C           43           program.psm
 ascii_D           44           program.psm
 ascii_E           45           program.psm
 ascii_F           46           program.psm
 ascii_G           47           program.psm
 ascii_H           48           program.psm
 ascii_I           49           program.psm
 ascii_J           4A           program.psm
 ascii_K           4B           program.psm
 ascii_L           4C           program.psm
 ascii_M           4D           program.psm
 ascii_N           4E           program.psm
 ascii_O           4F           program.psm
 ascii_P           50           program.psm
 ascii_Q           51           program.psm
 ascii_R           52           program.psm
 ascii_S           53           program.psm
 ascii_T           54           program.psm
 ascii_U           55           program.psm
 ascii_V           56           program.psm
 ascii_W           57           program.psm
 ascii_X           58           program.psm
 ascii_Y           59           program.psm
 ascii_Z           5A           program.psm
 ascii_LBKT        5B           program.psm
 ascii_BKSLASH     5C           program.psm
 ascii_RBKT        5D           program.psm
 ascii_CARET       5E           program.psm
 ascii_UNDER       5F           program.psm
 ascii_TICK        60           program.psm
 ascii_a           61           program.psm
 ascii_b           62           program.psm
 ascii_c           63           program.psm
 ascii_d           64           program.psm
 ascii_e           65           program.psm
 ascii_f           66           program.psm
 ascii_g           67           program.psm
 ascii_h           68           program.psm
 ascii_i           69           program.psm
 ascii_j           6A           program.psm
 ascii_k           6B           program.psm
 ascii_l           6C           program.psm
 ascii_m           6D           program.psm
 ascii_n           6E           program.psm
 ascii_o           6F           program.psm
 ascii_p           70           program.psm
 ascii_q           71           program.psm
 ascii_r           72           program.psm
 ascii_s           73           program.psm
 ascii_t           74           program.psm
 ascii_u           75           program.psm
 ascii_v           76           program.psm
 ascii_w           77           program.psm
 ascii_x           78           program.psm
 ascii_y           79           program.psm
 ascii_z           7A           program.psm
 ascii_LBRACE      7B           program.psm
 ascii_VBAR        7C           program.psm
 ascii_RBRACE      7D           program.psm
 ascii_TILDE       7E           program.psm
 ascii_DEL         7F           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "24 Mar 2022"  
 timestamp$        "14:53:49"     



List of line labels

   Label        Addr  Source PSM File

 * cold_start   000   program.psm
 * LOOP         001   program.psm
   led_echo     04D   program.psm
   rs232_echo   054   program.psm
   BEGIN1       055   program.psm
   SEND         059   program.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             41
 STAR              -

 AND               -
 OR                -
 XOR               1

 ADD               -
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              1
 TESTCY            -
 COMPARE           1
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             3
 OUTPUT           21
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           1
 ENABLE            1
 RETURNI           -

 JUMP              3
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
