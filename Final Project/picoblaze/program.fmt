                       ;================================================================
                       ; Port address definitions...
                       ;================================================================
                       CONSTANT switches, 00         ; Switch read port
                       CONSTANT leds, 01             ; LED write port
                       CONSTANT uart_data_rx, 02     ; UART receive read port
                       CONSTANT uart_data_tx, 03     ; UART transmit write port
                       CONSTANT data_present, 04     ; UART stat read port, lsb
                       CONSTANT buffer_full, 05      ; UART stat read port, lsb
                       CONSTANT scroll_up, 06        ; up
                       CONSTANT scroll_down, 07      ; down
                       CONSTANT select, 08           ; select
                       CONSTANT back, 09             ; back
                       CONSTANT menu_sig, 0A         ; menu sig
                       CONSTANT sub_sig, 0B          ; sub_sig
                       CONSTANT play_pause, 0C       ; play_pause
                       CONSTANT vol_control, 0D      ; vol_control
                       CONSTANT mem_full, 2F         ; mem_full
                       CONSTANT b2m, 3D              ; back_to_main
                       CONSTANT rding, 4D            ; recording
                       ;================================================================
                       ; Useful constant declarations...
                       ;================================================================
                       CONSTANT all_clear, 00        ; define all clear
                       CONSTANT all_set, FF          ; define all set
                       CONSTANT ascii_NUL, 00        ; ascii code (null character)
                       CONSTANT ascii_SOH, 01        ; ascii code (start of header)
                       CONSTANT ascii_STX, 02        ; ascii code (start of text)
                       CONSTANT ascii_ETX, 03        ; ascii code (end of text)
                       CONSTANT ascii_EOT, 04        ; ascii code (end of xmit)
                       CONSTANT ascii_ENQ, 05        ; ascii code (enquiry)
                       CONSTANT ascii_ACK, 06        ; ascii code (acknowledge)
                       CONSTANT ascii_BEL, 07        ; ascii code (bell)
                       CONSTANT ascii_BS, 08         ; ascii code (backspace)
                       CONSTANT ascii_HT, 09         ; ascii code (horiz tab)
                       CONSTANT ascii_LF, 0A         ; ascii code (line feed)
                       CONSTANT ascii_VT, 0B         ; ascii code (vert tab)
                       CONSTANT ascii_FF, 0C         ; ascii code (form feed)
                       CONSTANT ascii_CR, 0D         ; ascii code (carriage return)
                       CONSTANT ascii_SO, 0E         ; ascii code (shift out)
                       CONSTANT ascii_SI, 0F         ; ascii code (shift in)
                       CONSTANT ascii_DLE, 10        ; ascii code (data link esc)
                       CONSTANT ascii_DC1, 11        ; ascii code (device ctrl 1, xon)
                       CONSTANT ascii_DC2, 12        ; ascii code (device ctrl 2)
                       CONSTANT ascii_DC3, 13        ; ascii code (device ctrl 3, xoff)
                       CONSTANT ascii_DC4, 14        ; ascii code (device ctrl 4)
                       CONSTANT ascii_NAK, 15        ; ascii code (negative acknowledge)
                       CONSTANT ascii_SYN, 16        ; ascii code (sync idle)
                       CONSTANT ascii_ETB, 17        ; ascii code (end xmit block)
                       CONSTANT ascii_CAN, 18        ; ascii code (cancel)
                       CONSTANT ascii_EM, 19         ; ascii code (end of medium)
                       CONSTANT ascii_SUB, 1A        ; ascii code (substitute)
                       CONSTANT ascii_ESC, 1B        ; ascii code (escape)
                       CONSTANT ascii_FS, 1C         ; ascii code (file separator)
                       CONSTANT ascii_GS, 1D         ; ascii code (group separator)
                       CONSTANT ascii_RS, 1E         ; ascii code (record separator)
                       CONSTANT ascii_US, 1F         ; ascii code (unit space)
                       CONSTANT ascii_SPACE, 20      ; ascii code
                       CONSTANT ascii_EXCLAIM, 21    ; ascii code
                       CONSTANT ascii_DBLQUOT, 22    ; ascii code
                       CONSTANT ascii_NUMSIGN, 23    ; ascii code
                       CONSTANT ascii_DOLLAR, 24     ; ascii code
                       CONSTANT ascii_PERCENT, 25    ; ascii code
                       CONSTANT ascii_AMP, 26        ; ascii code
                       CONSTANT ascii_SINQUOT, 27    ; ascii code
                       CONSTANT ascii_LPAREN, 28     ; ascii code
                       CONSTANT ascii_RPAREN, 29     ; ascii code
                       CONSTANT ascii_ASTERISK, 2A   ; ascii code
                       CONSTANT ascii_PLUS, 2B       ; ascii code
                       CONSTANT ascii_COMMA, 2C      ; ascii code
                       CONSTANT ascii_MINUS, 2D      ; ascii code
                       CONSTANT ascii_PERIOD, 2E     ; ascii code
                       CONSTANT ascii_FWDSLASH, 2F   ; ascii code
                       CONSTANT ascii_0, 30          ; ascii code
                       CONSTANT ascii_1, 31          ; ascii code
                       CONSTANT ascii_2, 32          ; ascii code
                       CONSTANT ascii_3, 33          ; ascii code
                       CONSTANT ascii_4, 34          ; ascii code
                       CONSTANT ascii_5, 35          ; ascii code
                       CONSTANT ascii_6, 36          ; ascii code
                       CONSTANT ascii_7, 37          ; ascii code
                       CONSTANT ascii_8, 38          ; ascii code
                       CONSTANT ascii_9, 39          ; ascii code
                       CONSTANT ascii_COLON, 3A      ; ascii code
                       CONSTANT ascii_SEMI, 3B       ; ascii code
                       CONSTANT ascii_LESS, 3C       ; ascii code
                       CONSTANT ascii_EQUAL, 3D      ; ascii code
                       CONSTANT ascii_GREATER, 3E    ; ascii code
                       CONSTANT ascii_QUESTION, 3F   ; ascii code
                       CONSTANT ascii_CIRCAT, 40     ; ascii code
                       CONSTANT ascii_A, 41          ; ascii code
                       CONSTANT ascii_B, 42          ; ascii code
                       CONSTANT ascii_C, 43          ; ascii code
                       CONSTANT ascii_D, 44          ; ascii code
                       CONSTANT ascii_E, 45          ; ascii code
                       CONSTANT ascii_F, 46          ; ascii code
                       CONSTANT ascii_G, 47          ; ascii code
                       CONSTANT ascii_H, 48          ; ascii code
                       CONSTANT ascii_I, 49          ; ascii code
                       CONSTANT ascii_J, 4A          ; ascii code
                       CONSTANT ascii_K, 4B          ; ascii code
                       CONSTANT ascii_L, 4C          ; ascii code
                       CONSTANT ascii_M, 4D          ; ascii code
                       CONSTANT ascii_N, 4E          ; ascii code
                       CONSTANT ascii_O, 4F          ; ascii code
                       CONSTANT ascii_P, 50          ; ascii code
                       CONSTANT ascii_Q, 51          ; ascii code
                       CONSTANT ascii_R, 52          ; ascii code
                       CONSTANT ascii_S, 53          ; ascii code
                       CONSTANT ascii_T, 54          ; ascii code
                       CONSTANT ascii_U, 55          ; ascii code
                       CONSTANT ascii_V, 56          ; ascii code
                       CONSTANT ascii_W, 57          ; ascii code
                       CONSTANT ascii_X, 58          ; ascii code
                       CONSTANT ascii_Y, 59          ; ascii code
                       CONSTANT ascii_Z, 5A          ; ascii code
                       CONSTANT ascii_LBKT, 5B       ; ascii code
                       CONSTANT ascii_BKSLASH, 5C    ; ascii code
                       CONSTANT ascii_RBKT, 5D       ; ascii code
                       CONSTANT ascii_CARET, 5E      ; ascii code
                       CONSTANT ascii_UNDER, 5F      ; ascii code
                       CONSTANT ascii_TICK, 60       ; ascii code
                       CONSTANT ascii_a, 61          ; ascii code
                       CONSTANT ascii_b, 62          ; ascii code
                       CONSTANT ascii_c, 63          ; ascii code
                       CONSTANT ascii_d, 64          ; ascii code
                       CONSTANT ascii_e, 65          ; ascii code
                       CONSTANT ascii_f, 66          ; ascii code
                       CONSTANT ascii_g, 67          ; ascii code
                       CONSTANT ascii_h, 68          ; ascii code
                       CONSTANT ascii_i, 69          ; ascii code
                       CONSTANT ascii_j, 6A          ; ascii code
                       CONSTANT ascii_k, 6B          ; ascii code
                       CONSTANT ascii_l, 6C          ; ascii code
                       CONSTANT ascii_m, 6D          ; ascii code
                       CONSTANT ascii_n, 6E          ; ascii code
                       CONSTANT ascii_o, 6F          ; ascii code
                       CONSTANT ascii_p, 70          ; ascii code
                       CONSTANT ascii_q, 71          ; ascii code
                       CONSTANT ascii_r, 72          ; ascii code
                       CONSTANT ascii_s, 73          ; ascii code
                       CONSTANT ascii_t, 74          ; ascii code
                       CONSTANT ascii_u, 75          ; ascii code
                       CONSTANT ascii_v, 76          ; ascii code
                       CONSTANT ascii_w, 77          ; ascii code
                       CONSTANT ascii_x, 78          ; ascii code
                       CONSTANT ascii_y, 79          ; ascii code
                       CONSTANT ascii_z, 7A          ; ascii code
                       CONSTANT ascii_LBRACE, 7B     ; ascii code
                       CONSTANT ascii_VBAR, 7C       ; ascii code
                       CONSTANT ascii_RBRACE, 7D     ; ascii code
                       CONSTANT ascii_TILDE, 7E      ; ascii code
                       CONSTANT ascii_DEL, 7F        ; ascii code
                       ;================================================================
                       ; Actual assembly program goes here...
                       ;
                       ; NOTE: size limit is 4096 lines of actual assembly code
                       ;       Old documentation says it is 1024. This is now incorrect.
                       ;================================================================
                       NAMEREG s8, scroll_pos
                       NAMEREG s9, vol_count
                       NAMEREG s7, waste
                       NAMEREG sA, play_sel
                       NAMEREG sB, del_sel
                       LOAD vol_count, 01
                       LOAD scroll_pos, 01
                       LOAD play_sel, 01
                       LOAD del_sel, 01
                       LOAD waste, 00
                       JUMP welcome
                 wait: 
                       INPUT s3, buffer_full
                       COMPARE s3, 01
                       JUMP Z, wait
                       RETURN 
                       ;Function to waste time
           waste_time: 
                       ADD waste, 01
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       CALL wait
                       COMPARE waste, FF
                       RETURN Z
                       JUMP waste_time
  increment_scroll_up: 
                       LOAD s0, s0
                       ADD scroll_pos, 01
                       JUMP start_menu
increment_scroll_down: 
                       LOAD s0, s0
                       SUB scroll_pos, 01
                       JUMP start_menu
     increment_vol_up: 
                       LOAD s0, s0
                       ADD vol_count, 01
                       LOAD s3, 01
                       OUTPUT s3, vol_control
                       JUMP volume
   increment_vol_down: 
                       LOAD s0, s0
                       SUB vol_count, 01
                       LOAD s3, 02
                       OUTPUT s3, vol_control
                       JUMP volume
    increment_play_up: 
                       LOAD s0, s0
                       ADD play_sel, 01
                       JUMP play_msg
  increment_play_down: 
                       LOAD s0, s0
                       SUB play_sel, 01
                       JUMP play_msg
     increment_del_up: 
                       LOAD s0, s0
                       ADD del_sel, 01
                       JUMP delete_msg
   increment_del_down: 
                       LOAD s0, s0
                       SUB del_sel, 01
                       JUMP delete_msg
              one_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_1
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
              two_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_2
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
            three_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_3
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
             four_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_4
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
             five_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_5
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
              six_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_6
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
            seven_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_7
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
            eight_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_8
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
             nine_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_9
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
              ten_out: 
                       LOAD s0, s0
                       LOAD s0, ascii_1
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_0
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       RETURN 
          roll_to_one: 
                       LOAD s0, s0
                       LOAD scroll_pos, 01
                       JUMP start_menu
         roll_to_five: 
                       LOAD s0, s0
                       LOAD scroll_pos, 05
                       JUMP start_menu
     roll_to_one_play: 
                       LOAD s0, s0
                       LOAD play_sel, 01
                       JUMP play_msg
    roll_to_five_play: 
                       LOAD s0, s0
                       LOAD play_sel, 05
                       JUMP play_msg
      roll_to_one_del: 
                       LOAD s0, s0
                       LOAD del_sel, 01
                       JUMP delete_msg
     roll_to_five_del: 
                       LOAD s0, s0
                       LOAD del_sel, 05
                       JUMP delete_msg
      roll_to_one_vol: 
                       LOAD s0, s0
                       LOAD vol_count, 01
                       JUMP volume
      roll_to_ten_vol: 
                       LOAD s0, s0
                       LOAD vol_count, 0A
                       JUMP volume
            waitping1: 
                       INPUT s2, back
                       INPUT s3, play_pause
                       INPUT s4, b2m
                       LOAD sD, 01
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s2, 01
                       JUMP Z, play_1
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, waitping1
                       JUMP play_1
             playing1: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitping1
               waitP1: 
                       INPUT s1, back
                       INPUT sE, play_pause
                       LOAD sD, 01
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       LOAD sD, 01
                       OUTPUT sD, sub_sig
                       COMPARE s1, 01
                       JUMP Z, play_msg
                       COMPARE sE, 01
                       JUMP Z, playing1
                       JUMP waitP1
               play_1: 
                       LOAD s0, s0
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_w
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_h
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitP1
            waitping2: 
                       INPUT s2, back
                       INPUT s3, play_pause
                       INPUT s4, b2m
                       LOAD sD, 02
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s2, 01
                       JUMP Z, play_2
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, waitping2
                       JUMP play_2
             playing2: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitping2
               waitP2: 
                       INPUT s1, back
                       INPUT sE, play_pause
                       LOAD sD, 02
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s1, 01
                       JUMP Z, play_msg
                       COMPARE sE, 01
                       JUMP Z, playing2
                       JUMP waitP2
               play_2: 
                       LOAD s0, s0
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_w
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_h
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitP2
            waitping3: 
                       INPUT s2, back
                       INPUT s3, play_pause
                       INPUT s4, b2m
                       LOAD sD, 03
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s2, 01
                       JUMP Z, play_3
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, waitping3
                       JUMP play_3
             playing3: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitping3
               waitP3: 
                       INPUT s1, back
                       INPUT sE, play_pause
                       LOAD sD, 03
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s1, 01
                       JUMP Z, play_msg
                       COMPARE sE, 01
                       JUMP Z, playing3
                       JUMP waitP3
               play_3: 
                       LOAD s0, s0
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_w
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_h
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitP3
            waitping4: 
                       INPUT s2, back
                       INPUT s3, play_pause
                       INPUT s4, b2m
                       LOAD sD, 04
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s2, 01
                       JUMP Z, play_4
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, waitping4
                       JUMP play_4
             playing4: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitping4
               waitP4: 
                       INPUT s1, back
                       INPUT sE, play_pause
                       LOAD sD, 04
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s1, 01
                       JUMP Z, play_msg
                       COMPARE sE, 01
                       JUMP Z, playing4
                       JUMP waitP4
               play_4: 
                       LOAD s0, s0
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_w
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_h
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitP4
            waitping5: 
                       INPUT s2, back
                       INPUT s3, play_pause
                       INPUT s4, b2m
                       OUTPUT sD, sub_sig
                       LOAD sC, 05
                       LOAD sD, 05
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s2, 01
                       JUMP Z, play_5
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, waitping5
                       JUMP play_5
             playing5: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitping5
               waitP5: 
                       INPUT s1, back
                       INPUT sE, play_pause
                       LOAD sD, 05
                       OUTPUT sD, sub_sig
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s1, 01
                       JUMP Z, play_msg
                       COMPARE sE, 01
                       JUMP Z, playing5
                       JUMP waitP5
               play_5: 
                       LOAD s0, s0
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_w
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_h
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitP5
            find_play: 
                       LOAD s0, s0
                       COMPARE play_sel, 01
                       JUMP Z, play_1
                       COMPARE play_sel, 02
                       JUMP Z, play_2
                       COMPARE play_sel, 03
                       JUMP Z, play_3
                       COMPARE play_sel, 04
                       JUMP Z, play_4
                       COMPARE play_sel, 05
                       JUMP Z, play_5
     wait_in_play_msg: 
                       LOAD s0, s0
                       INPUT s3, select
                       INPUT s5, back
                       INPUT s2, scroll_up
                       INPUT s1, scroll_down
                       LOAD sC, 01
                       OUTPUT sC, menu_sig
                       COMPARE s5, 01
                       JUMP Z, start_menu
                       COMPARE s2, 01
                       JUMP Z, increment_play_up
                       COMPARE s1, 01
                       JUMP Z, increment_play_down
                       COMPARE s3, 01
                       JUMP Z, find_play
                       JUMP wait_in_play_msg
             play_msg: 
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P              ;P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y              ;y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_COLON          ;:
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       COMPARE play_sel, 00
                       CALL Z, roll_to_five_play
                       COMPARE play_sel, 01
                       CALL Z, one_out
                       COMPARE play_sel, 02
                       CALL Z, two_out
                       COMPARE play_sel, 03
                       CALL Z, three_out
                       COMPARE play_sel, 04
                       CALL Z, four_out
                       COMPARE play_sel, 05
                       CALL Z, five_out
                       COMPARE play_sel, 06
                       CALL Z, roll_to_one_play
                       LOAD waste, 00
                       JUMP wait_in_play_msg
       wait_back_full: 
                       INPUT s3, back
                       COMPARE s3, 01
                       JUMP Z, record_msg
                       JUMP wait_back_full
                       LOAD sC, 02
                       OUTPUT sC, menu_sig
                 full: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_f
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_u
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP wait_back_full
     wait_back_record: 
                       LOAD s0, s0
                       INPUT s3, back
                       INPUT s4, b2m
                       LOAD s5, 01
                       OUTPUT s5, rding
                       LOAD sC, 02
                       OUTPUT sC, menu_sig
                       COMPARE s3, 01
                       JUMP Z, record_msg
                       COMPARE s4, 01
                       JUMP Z, start_menu
                       JUMP wait_back_record
            recording: 
                       INPUT s3, mem_full
                       COMPARE s3, 01
                       JUMP Z, full
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_R
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_d
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD sC, 02
                       OUTPUT sC, menu_sig
                       INPUT sF, mem_full
                       COMPARE sF, 01
                       JUMP Z, full
                       JUMP wait_back_record
          wait_record: 
                       LOAD s0, s0
                       INPUT s3, select
                       INPUT s5, back
                       LOAD sF, 00
                       OUTPUT sF, rding
                       LOAD sC, 02
                       OUTPUT sC, menu_sig
                       COMPARE s5, 01
                       JUMP Z, start_menu
                       COMPARE s3, 01
                       JUMP Z, recording
                       JUMP wait_record
           record_msg: 
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_d
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD waste, 00
                       JUMP wait_record
                del_1: 
                       LOAD s0, s0
                       LOAD sD, 01
                       OUTPUT sD, sub_sig
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       JUMP delete_msg
                del_2: 
                       LOAD s0, s0
                       LOAD sD, 02
                       OUTPUT sD, sub_sig
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       JUMP delete_msg
                del_3: 
                       LOAD s0, s0
                       LOAD sD, 03
                       OUTPUT sD, sub_sig
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       JUMP delete_msg
                del_4: 
                       LOAD s0, s0
                       LOAD sD, 04
                       OUTPUT sD, sub_sig
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       JUMP delete_msg
                del_5: 
                       LOAD s0, s0
                       LOAD sD, 05
                       OUTPUT sD, sub_sig
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       JUMP delete_msg
             find_del: 
                       LOAD s0, s0
                       COMPARE del_sel, 01
                       JUMP Z, del_1
                       COMPARE del_sel, 02
                       JUMP Z, del_2
                       COMPARE del_sel, 03
                       JUMP Z, del_3
                       COMPARE del_sel, 04
                       JUMP Z, del_4
                       COMPARE del_sel, 05
                       JUMP Z, del_5
          wait_delete: 
                       LOAD s0, s0
                       INPUT s3, select
                       INPUT s5, back
                       INPUT s2, scroll_up
                       INPUT s1, scroll_down
                       LOAD sC, 03
                       OUTPUT sC, menu_sig
                       COMPARE s5, 01
                       JUMP Z, start_menu
                       COMPARE s2, 01
                       JUMP Z, increment_del_up
                       COMPARE s1, 01
                       JUMP Z, increment_del_down
                       COMPARE s3, 01
                       JUMP Z, find_del
                       JUMP wait_delete
           delete_msg: 
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_D              ;D
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_QUESTION       ;?
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_F              ;F
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_COLON          ;:
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       COMPARE del_sel, 00
                       CALL Z, roll_to_five_del
                       COMPARE del_sel, 01
                       CALL Z, one_out
                       COMPARE del_sel, 02
                       CALL Z, two_out
                       COMPARE del_sel, 03
                       CALL Z, three_out
                       COMPARE del_sel, 04
                       CALL Z, four_out
                       COMPARE del_sel, 05
                       CALL Z, five_out
                       COMPARE del_sel, 06
                       CALL Z, roll_to_one_del
                       LOAD waste, 00
                       JUMP wait_delete
             wait_all: 
                       LOAD s0, s0
                       INPUT s3, select
                       INPUT s5, back
                       LOAD sC, 04
                       OUTPUT sC, menu_sig
                       COMPARE s5, 01
                       JUMP Z, start_menu
                       JUMP wait_all
           delete_all: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_D
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_QUESTION
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP wait_all
             wait_vol: 
                       LOAD s0, s0
                       INPUT s3, scroll_up
                       INPUT s4, scroll_down
                       INPUT s5, back
                       LOAD sC, 05
                       OUTPUT sC, menu_sig
                       COMPARE s3, 01
                       JUMP Z, increment_vol_up
                       COMPARE s4, 01
                       JUMP Z, increment_vol_down
                       COMPARE s5, 01
                       JUMP Z, start_menu
                       JUMP wait_vol
               volume: 
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_V
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_u
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_COLON
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       COMPARE vol_count, 01
                       CALL Z, one_out
                       COMPARE vol_count, 02
                       CALL Z, two_out
                       COMPARE vol_count, 03
                       CALL Z, three_out
                       COMPARE vol_count, 04
                       CALL Z, four_out
                       COMPARE vol_count, 05
                       CALL Z, five_out
                       COMPARE vol_count, 06
                       CALL Z, six_out
                       COMPARE vol_count, 07
                       CALL Z, seven_out
                       COMPARE vol_count, 08
                       CALL Z, eight_out
                       COMPARE vol_count, 09
                       CALL Z, nine_out
                       COMPARE vol_count, 0A
                       CALL Z, ten_out
                       COMPARE vol_count, 0B
                       CALL Z, roll_to_one_vol
                       COMPARE vol_count, 00
                       CALL Z, roll_to_ten_vol
                       LOAD waste, 00
                       LOAD sE, 00
                       OUTPUT sE, vol_control
                       JUMP wait_vol
        get_selection: 
                       COMPARE scroll_pos, 01
                       JUMP Z, play_msg
                       COMPARE scroll_pos, 02
                       JUMP Z, record_msg
                       COMPARE scroll_pos, 03
                       JUMP Z, delete_msg
                       COMPARE scroll_pos, 04
                       JUMP Z, delete_all
                       COMPARE scroll_pos, 05
                       JUMP Z, volume
              wait_in: 
                       LOAD s0, s0
                       INPUT s0, scroll_up
                       INPUT s1, scroll_down
                       INPUT s2, select
                       LOAD s3, 00
                       OUTPUT s3, menu_sig
                       COMPARE s0, 01
                       JUMP Z, increment_scroll_up
                       COMPARE s1, 01
                       JUMP Z, increment_scroll_down
                       COMPARE s2, 01
                       JUMP Z, get_selection
                       JUMP wait_in
           start_menu: LOAD s0, s0                   ; (nop)
                       ; Code for main menu options
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_d              ;d
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p              ;p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y              ;y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_V              ;V
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_4              ;4
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_2              ;2
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_0              ;0
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_6              ;6
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_9              ;9
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_u              ;u
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_O              ;O
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p              ;p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_COLON          ;:
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_1              ;1
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_RPAREN         ;)
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_P              ;P
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y              ;y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_2              ;2
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_RPAREN         ;)
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_R              ;R
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c              ;c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_d              ;d
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_3              ;3
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_RPAREN         ;)
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_D              ;D
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_4              ;4
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_RPAREN         ;)
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_D              ;D
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_g              ;g
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_5              ;5
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_RPAREN         ;)
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_V              ;V
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_u              ;u
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m              ;m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_C              ;C
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_C              ;C
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_u              ;u
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_S              ;S
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c              ;c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_COLON          ;:
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       COMPARE scroll_pos, 00
                       CALL Z, roll_to_five
                       COMPARE scroll_pos, 01
                       CALL Z, one_out
                       COMPARE scroll_pos, 02
                       CALL Z, two_out
                       COMPARE scroll_pos, 03
                       CALL Z, three_out
                       COMPARE scroll_pos, 04
                       CALL Z, four_out
                       COMPARE scroll_pos, 05
                       CALL Z, five_out
                       COMPARE scroll_pos, 06
                       CALL Z, roll_to_one
                       LOAD s0, ascii_LF             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_CR             ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD waste, 00
                       JUMP wait_in
          waitwelcome: 
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       CALL waste_time
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       CALL waste_time
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       CALL waste_time
                       INPUT s2, select
                       COMPARE s2, 01
                       JUMP Z, start_menu
                       JUMP start_menu
              welcome: 
                       LOAD s0, ascii_FF
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_W              ;W
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_c              ;c
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_m              ;m
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_t              ;t
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_M              ;M
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_d              ;d
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_p              ;p
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_l              ;l
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_a              ;a
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_y              ;y
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_V              ;V
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_e              ;e
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_r              ;r
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_s              ;s
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_i              ;i
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_o              ;o
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_n              ;n
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_SPACE          ;
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_4              ;4
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_2              ;2
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_0              ;0
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_PERIOD         ;.
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_6              ;6
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       LOAD s0, ascii_9              ;9
                       OUTPUT s0, uart_data_tx
                       CALL wait
                       JUMP waitwelcome
                       ;================================================================
                       ;
                       ;================================================================
