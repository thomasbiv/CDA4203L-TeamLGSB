KCPSM6 Assembler log file for program 'C:\Users\patri\Documents\GitHub\CDA4203L-TeamLGSB\Final Project\picoblaze\program.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 07 Apr 2022
Assembly timestamp: 18:37:08

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 3BC hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 957
Memory locations available: 3139


Assembly listing

 Addr Code               Instruction

 000                     ;================================================================
 000                     ; Port address definitions...
 000                     ;================================================================
 000                     CONSTANT switches, 00             ; Switch read port
 000                     CONSTANT leds, 01                 ; LED write port
 000                     CONSTANT uart_data_rx, 02         ; UART receive read port
 000                     CONSTANT uart_data_tx, 03         ; UART transmit write port
 000                     CONSTANT data_present, 04         ; UART stat read port, lsb
 000                     CONSTANT buffer_full, 05          ; UART stat read port, lsb
 000                     ;================================================================
 000                     ; Useful constant declarations...
 000                     ;================================================================
 000                     CONSTANT all_clear, 00            ; define all clear
 000                     CONSTANT all_set, FF              ; define all set
 000                     CONSTANT ascii_NUL, 00            ; ascii code (null character)
 000                     CONSTANT ascii_SOH, 01            ; ascii code (start of header)
 000                     CONSTANT ascii_STX, 02            ; ascii code (start of text)
 000                     CONSTANT ascii_ETX, 03            ; ascii code (end of text)
 000                     CONSTANT ascii_EOT, 04            ; ascii code (end of xmit)
 000                     CONSTANT ascii_ENQ, 05            ; ascii code (enquiry)
 000                     CONSTANT ascii_ACK, 06            ; ascii code (acknowledge)
 000                     CONSTANT ascii_BEL, 07            ; ascii code (bell)
 000                     CONSTANT ascii_BS, 08             ; ascii code (backspace)
 000                     CONSTANT ascii_HT, 09             ; ascii code (horiz tab)
 000                     CONSTANT ascii_LF, 0A             ; ascii code (line feed)
 000                     CONSTANT ascii_VT, 0B             ; ascii code (vert tab)
 000                     CONSTANT ascii_FF, 0C             ; ascii code (form feed)
 000                     CONSTANT ascii_CR, 0D             ; ascii code (carriage return)
 000                     CONSTANT ascii_SO, 0E             ; ascii code (shift out)
 000                     CONSTANT ascii_SI, 0F             ; ascii code (shift in)
 000                     CONSTANT ascii_DLE, 10            ; ascii code (data link esc)
 000                     CONSTANT ascii_DC1, 11            ; ascii code (device ctrl 1, xon)
 000                     CONSTANT ascii_DC2, 12            ; ascii code (device ctrl 2)
 000                     CONSTANT ascii_DC3, 13            ; ascii code (device ctrl 3, xoff)
 000                     CONSTANT ascii_DC4, 14            ; ascii code (device ctrl 4)
 000                     CONSTANT ascii_NAK, 15            ; ascii code (negative acknowledge)
 000                     CONSTANT ascii_SYN, 16            ; ascii code (sync idle)
 000                     CONSTANT ascii_ETB, 17            ; ascii code (end xmit block)
 000                     CONSTANT ascii_CAN, 18            ; ascii code (cancel)
 000                     CONSTANT ascii_EM, 19             ; ascii code (end of medium)
 000                     CONSTANT ascii_SUB, 1A            ; ascii code (substitute)
 000                     CONSTANT ascii_ESC, 1B            ; ascii code (escape)
 000                     CONSTANT ascii_FS, 1C             ; ascii code (file separator)
 000                     CONSTANT ascii_GS, 1D             ; ascii code (group separator)
 000                     CONSTANT ascii_RS, 1E             ; ascii code (record separator)
 000                     CONSTANT ascii_US, 1F             ; ascii code (unit space)
 000                     CONSTANT ascii_SPACE, 20          ; ascii code
 000                     CONSTANT ascii_EXCLAIM, 21        ; ascii code
 000                     CONSTANT ascii_DBLQUOT, 22        ; ascii code
 000                     CONSTANT ascii_NUMSIGN, 23        ; ascii code
 000                     CONSTANT ascii_DOLLAR, 24         ; ascii code
 000                     CONSTANT ascii_PERCENT, 25        ; ascii code
 000                     CONSTANT ascii_AMP, 26            ; ascii code
 000                     CONSTANT ascii_SINQUOT, 27        ; ascii code
 000                     CONSTANT ascii_LPAREN, 28         ; ascii code
 000                     CONSTANT ascii_RPAREN, 29         ; ascii code
 000                     CONSTANT ascii_ASTERISK, 2A       ; ascii code
 000                     CONSTANT ascii_PLUS, 2B           ; ascii code
 000                     CONSTANT ascii_COMMA, 2C          ; ascii code
 000                     CONSTANT ascii_MINUS, 2D          ; ascii code
 000                     CONSTANT ascii_PERIOD, 2E         ; ascii code
 000                     CONSTANT ascii_FWDSLASH, 2F       ; ascii code
 000                     CONSTANT ascii_0, 30              ; ascii code
 000                     CONSTANT ascii_1, 31              ; ascii code
 000                     CONSTANT ascii_2, 32              ; ascii code
 000                     CONSTANT ascii_3, 33              ; ascii code
 000                     CONSTANT ascii_4, 34              ; ascii code
 000                     CONSTANT ascii_5, 35              ; ascii code
 000                     CONSTANT ascii_6, 36              ; ascii code
 000                     CONSTANT ascii_7, 37              ; ascii code
 000                     CONSTANT ascii_8, 38              ; ascii code
 000                     CONSTANT ascii_9, 39              ; ascii code
 000                     CONSTANT ascii_COLON, 3A          ; ascii code
 000                     CONSTANT ascii_SEMI, 3B           ; ascii code
 000                     CONSTANT ascii_LESS, 3C           ; ascii code
 000                     CONSTANT ascii_EQUAL, 3D          ; ascii code
 000                     CONSTANT ascii_GREATER, 3E        ; ascii code
 000                     CONSTANT ascii_QUESTION, 3F       ; ascii code
 000                     CONSTANT ascii_CIRCAT, 40         ; ascii code
 000                     CONSTANT ascii_A, 41              ; ascii code
 000                     CONSTANT ascii_B, 42              ; ascii code
 000                     CONSTANT ascii_C, 43              ; ascii code
 000                     CONSTANT ascii_D, 44              ; ascii code
 000                     CONSTANT ascii_E, 45              ; ascii code
 000                     CONSTANT ascii_F, 46              ; ascii code
 000                     CONSTANT ascii_G, 47              ; ascii code
 000                     CONSTANT ascii_H, 48              ; ascii code
 000                     CONSTANT ascii_I, 49              ; ascii code
 000                     CONSTANT ascii_J, 4A              ; ascii code
 000                     CONSTANT ascii_K, 4B              ; ascii code
 000                     CONSTANT ascii_L, 4C              ; ascii code
 000                     CONSTANT ascii_M, 4D              ; ascii code
 000                     CONSTANT ascii_N, 4E              ; ascii code
 000                     CONSTANT ascii_O, 4F              ; ascii code
 000                     CONSTANT ascii_P, 50              ; ascii code
 000                     CONSTANT ascii_Q, 51              ; ascii code
 000                     CONSTANT ascii_R, 52              ; ascii code
 000                     CONSTANT ascii_S, 53              ; ascii code
 000                     CONSTANT ascii_T, 54              ; ascii code
 000                     CONSTANT ascii_U, 55              ; ascii code
 000                     CONSTANT ascii_V, 56              ; ascii code
 000                     CONSTANT ascii_W, 57              ; ascii code
 000                     CONSTANT ascii_X, 58              ; ascii code
 000                     CONSTANT ascii_Y, 59              ; ascii code
 000                     CONSTANT ascii_Z, 5A              ; ascii code
 000                     CONSTANT ascii_LBKT, 5B           ; ascii code
 000                     CONSTANT ascii_BKSLASH, 5C        ; ascii code
 000                     CONSTANT ascii_RBKT, 5D           ; ascii code
 000                     CONSTANT ascii_CARET, 5E          ; ascii code
 000                     CONSTANT ascii_UNDER, 5F          ; ascii code
 000                     CONSTANT ascii_TICK, 60           ; ascii code
 000                     CONSTANT ascii_a, 61              ; ascii code
 000                     CONSTANT ascii_b, 62              ; ascii code
 000                     CONSTANT ascii_c, 63              ; ascii code
 000                     CONSTANT ascii_d, 64              ; ascii code
 000                     CONSTANT ascii_e, 65              ; ascii code
 000                     CONSTANT ascii_f, 66              ; ascii code
 000                     CONSTANT ascii_g, 67              ; ascii code
 000                     CONSTANT ascii_h, 68              ; ascii code
 000                     CONSTANT ascii_i, 69              ; ascii code
 000                     CONSTANT ascii_j, 6A              ; ascii code
 000                     CONSTANT ascii_k, 6B              ; ascii code
 000                     CONSTANT ascii_l, 6C              ; ascii code
 000                     CONSTANT ascii_m, 6D              ; ascii code
 000                     CONSTANT ascii_n, 6E              ; ascii code
 000                     CONSTANT ascii_o, 6F              ; ascii code
 000                     CONSTANT ascii_p, 70              ; ascii code
 000                     CONSTANT ascii_q, 71              ; ascii code
 000                     CONSTANT ascii_r, 72              ; ascii code
 000                     CONSTANT ascii_s, 73              ; ascii code
 000                     CONSTANT ascii_t, 74              ; ascii code
 000                     CONSTANT ascii_u, 75              ; ascii code
 000                     CONSTANT ascii_v, 76              ; ascii code
 000                     CONSTANT ascii_w, 77              ; ascii code
 000                     CONSTANT ascii_x, 78              ; ascii code
 000                     CONSTANT ascii_y, 79              ; ascii code
 000                     CONSTANT ascii_z, 7A              ; ascii code
 000                     CONSTANT ascii_LBRACE, 7B         ; ascii code
 000                     CONSTANT ascii_VBAR, 7C           ; ascii code
 000                     CONSTANT ascii_RBRACE, 7D         ; ascii code
 000                     CONSTANT ascii_TILDE, 7E          ; ascii code
 000                     CONSTANT ascii_DEL, 7F            ; ascii code
 000                     ;================================================================
 000                     ; Actual assembly program goes here...
 000                     ;
 000                     ; NOTE: size limit is 4096 lines of actual assembly code
 000                     ;       Old documentation says it is 1024. This is now incorrect.
 000                     ;================================================================
 000  22005              JUMP 005[cold_start]
 001               wait: 
 001  09305              INPUT s3, 05[buffer_full]
 002  1D301              COMPARE s3, 01
 003  32001              JUMP Z, 001[wait]
 004  25000              RETURN 
 005  00000  cold_start: LOAD s0, s0                       ; (nop)
 006                     ; Code 1
 006                     ; Write code to output a message to the
 006                     ; serial port.  The message must be longer
 006                     ; than 25 characters.
 006  01057              LOAD s0, 57[ascii_W]              ;W
 007  2D003              OUTPUT s0, 03[uart_data_tx]
 008  20001              CALL 001[wait]
 009  01065              LOAD s0, 65[ascii_e]              ;e
 00A  2D003              OUTPUT s0, 03[uart_data_tx]
 00B  20001              CALL 001[wait]
 00C  0106C              LOAD s0, 6C[ascii_l]              ;l
 00D  2D003              OUTPUT s0, 03[uart_data_tx]
 00E  20001              CALL 001[wait]
 00F  01063              LOAD s0, 63[ascii_c]              ;c
 010  2D003              OUTPUT s0, 03[uart_data_tx]
 011  20001              CALL 001[wait]
 012  0106F              LOAD s0, 6F[ascii_o]              ;o
 013  2D003              OUTPUT s0, 03[uart_data_tx]
 014  20001              CALL 001[wait]
 015  0106D              LOAD s0, 6D[ascii_m]              ;m
 016  2D003              OUTPUT s0, 03[uart_data_tx]
 017  20001              CALL 001[wait]
 018  01065              LOAD s0, 65[ascii_e]              ;e
 019  2D003              OUTPUT s0, 03[uart_data_tx]
 01A  20001              CALL 001[wait]
 01B  01020              LOAD s0, 20[ascii_SPACE]          ;
 01C  2D003              OUTPUT s0, 03[uart_data_tx]
 01D  20001              CALL 001[wait]
 01E  01074              LOAD s0, 74[ascii_t]              ;t
 01F  2D003              OUTPUT s0, 03[uart_data_tx]
 020  20001              CALL 001[wait]
 021  0106F              LOAD s0, 6F[ascii_o]              ;o
 022  2D003              OUTPUT s0, 03[uart_data_tx]
 023  20001              CALL 001[wait]
 024  01020              LOAD s0, 20[ascii_SPACE]          ;
 025  2D003              OUTPUT s0, 03[uart_data_tx]
 026  20001              CALL 001[wait]
 027  0104D              LOAD s0, 4D[ascii_M]              ;M
 028  2D003              OUTPUT s0, 03[uart_data_tx]
 029  20001              CALL 001[wait]
 02A  01065              LOAD s0, 65[ascii_e]              ;e
 02B  2D003              OUTPUT s0, 03[uart_data_tx]
 02C  20001              CALL 001[wait]
 02D  01064              LOAD s0, 64[ascii_d]              ;d
 02E  2D003              OUTPUT s0, 03[uart_data_tx]
 02F  20001              CALL 001[wait]
 030  01069              LOAD s0, 69[ascii_i]              ;i
 031  2D003              OUTPUT s0, 03[uart_data_tx]
 032  20001              CALL 001[wait]
 033  01061              LOAD s0, 61[ascii_a]              ;a
 034  2D003              OUTPUT s0, 03[uart_data_tx]
 035  20001              CALL 001[wait]
 036  01070              LOAD s0, 70[ascii_p]              ;p
 037  2D003              OUTPUT s0, 03[uart_data_tx]
 038  20001              CALL 001[wait]
 039  0106C              LOAD s0, 6C[ascii_l]              ;l
 03A  2D003              OUTPUT s0, 03[uart_data_tx]
 03B  20001              CALL 001[wait]
 03C  01061              LOAD s0, 61[ascii_a]              ;a
 03D  2D003              OUTPUT s0, 03[uart_data_tx]
 03E  20001              CALL 001[wait]
 03F  01079              LOAD s0, 79[ascii_y]              ;y
 040  2D003              OUTPUT s0, 03[uart_data_tx]
 041  20001              CALL 001[wait]
 042  01065              LOAD s0, 65[ascii_e]              ;e
 043  2D003              OUTPUT s0, 03[uart_data_tx]
 044  20001              CALL 001[wait]
 045  01072              LOAD s0, 72[ascii_r]              ;r
 046  2D003              OUTPUT s0, 03[uart_data_tx]
 047  20001              CALL 001[wait]
 048  01020              LOAD s0, 20[ascii_SPACE]          ;
 049  2D003              OUTPUT s0, 03[uart_data_tx]
 04A  20001              CALL 001[wait]
 04B  01056              LOAD s0, 56[ascii_V]              ;V
 04C  2D003              OUTPUT s0, 03[uart_data_tx]
 04D  20001              CALL 001[wait]
 04E  01065              LOAD s0, 65[ascii_e]              ;e
 04F  2D003              OUTPUT s0, 03[uart_data_tx]
 050  20001              CALL 001[wait]
 051  01072              LOAD s0, 72[ascii_r]              ;r
 052  2D003              OUTPUT s0, 03[uart_data_tx]
 053  20001              CALL 001[wait]
 054  01073              LOAD s0, 73[ascii_s]              ;s
 055  2D003              OUTPUT s0, 03[uart_data_tx]
 056  20001              CALL 001[wait]
 057  01069              LOAD s0, 69[ascii_i]              ;i
 058  2D003              OUTPUT s0, 03[uart_data_tx]
 059  20001              CALL 001[wait]
 05A  0106F              LOAD s0, 6F[ascii_o]              ;o
 05B  2D003              OUTPUT s0, 03[uart_data_tx]
 05C  20001              CALL 001[wait]
 05D  0106E              LOAD s0, 6E[ascii_n]              ;n
 05E  2D003              OUTPUT s0, 03[uart_data_tx]
 05F  20001              CALL 001[wait]
 060  01020              LOAD s0, 20[ascii_SPACE]          ;
 061  2D003              OUTPUT s0, 03[uart_data_tx]
 062  20001              CALL 001[wait]
 063  01034              LOAD s0, 34[ascii_4]              ;4
 064  2D003              OUTPUT s0, 03[uart_data_tx]
 065  20001              CALL 001[wait]
 066  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 067  2D003              OUTPUT s0, 03[uart_data_tx]
 068  20001              CALL 001[wait]
 069  01032              LOAD s0, 32[ascii_2]              ;2
 06A  2D003              OUTPUT s0, 03[uart_data_tx]
 06B  20001              CALL 001[wait]
 06C  01030              LOAD s0, 30[ascii_0]              ;0
 06D  2D003              OUTPUT s0, 03[uart_data_tx]
 06E  20001              CALL 001[wait]
 06F  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 070  2D003              OUTPUT s0, 03[uart_data_tx]
 071  20001              CALL 001[wait]
 072  01036              LOAD s0, 36[ascii_6]              ;6
 073  2D003              OUTPUT s0, 03[uart_data_tx]
 074  20001              CALL 001[wait]
 075  01039              LOAD s0, 39[ascii_9]              ;9
 076  2D003              OUTPUT s0, 03[uart_data_tx]
 077  20001              CALL 001[wait]
 078  0100A              LOAD s0, 0A[ascii_LF]             ;
 079  2D003              OUTPUT s0, 03[uart_data_tx]
 07A  20001              CALL 001[wait]
 07B  01008              LOAD s0, 08[ascii_BS]             ;
 07C  2D003              OUTPUT s0, 03[uart_data_tx]
 07D  20001              CALL 001[wait]
 07E  01008              LOAD s0, 08[ascii_BS]             ;
 07F  2D003              OUTPUT s0, 03[uart_data_tx]
 080  20001              CALL 001[wait]
 081  01008              LOAD s0, 08[ascii_BS]             ;
 082  2D003              OUTPUT s0, 03[uart_data_tx]
 083  20001              CALL 001[wait]
 084  01008              LOAD s0, 08[ascii_BS]             ;
 085  2D003              OUTPUT s0, 03[uart_data_tx]
 086  20001              CALL 001[wait]
 087  01008              LOAD s0, 08[ascii_BS]             ;
 088  2D003              OUTPUT s0, 03[uart_data_tx]
 089  20001              CALL 001[wait]
 08A  01008              LOAD s0, 08[ascii_BS]             ;
 08B  2D003              OUTPUT s0, 03[uart_data_tx]
 08C  20001              CALL 001[wait]
 08D  01008              LOAD s0, 08[ascii_BS]             ;
 08E  2D003              OUTPUT s0, 03[uart_data_tx]
 08F  2F013              STORE s0, 13
 090  20001              CALL 001[wait]
 091  01008              LOAD s0, 08[ascii_BS]             ;
 092  2D003              OUTPUT s0, 03[uart_data_tx]
 093  2F013              STORE s0, 13
 094  20001              CALL 001[wait]
 095  01008              LOAD s0, 08[ascii_BS]             ;
 096  2D003              OUTPUT s0, 03[uart_data_tx]
 097  2F013              STORE s0, 13
 098  20001              CALL 001[wait]
 099  01008              LOAD s0, 08[ascii_BS]             ;
 09A  2D003              OUTPUT s0, 03[uart_data_tx]
 09B  2F013              STORE s0, 13
 09C  20001              CALL 001[wait]
 09D  01008              LOAD s0, 08[ascii_BS]             ;
 09E  2D003              OUTPUT s0, 03[uart_data_tx]
 09F  2F013              STORE s0, 13
 0A0  20001              CALL 001[wait]
 0A1  01008              LOAD s0, 08[ascii_BS]             ;
 0A2  2D003              OUTPUT s0, 03[uart_data_tx]
 0A3  2F013              STORE s0, 13
 0A4  20001              CALL 001[wait]
 0A5  01008              LOAD s0, 08[ascii_BS]             ;
 0A6  2D003              OUTPUT s0, 03[uart_data_tx]
 0A7  2F013              STORE s0, 13
 0A8  20001              CALL 001[wait]
 0A9  01008              LOAD s0, 08[ascii_BS]             ;
 0AA  2D003              OUTPUT s0, 03[uart_data_tx]
 0AB  2F013              STORE s0, 13
 0AC  20001              CALL 001[wait]
 0AD  01008              LOAD s0, 08[ascii_BS]             ;
 0AE  2D003              OUTPUT s0, 03[uart_data_tx]
 0AF  2F013              STORE s0, 13
 0B0  20001              CALL 001[wait]
 0B1  01008              LOAD s0, 08[ascii_BS]             ;
 0B2  2D003              OUTPUT s0, 03[uart_data_tx]
 0B3  2F013              STORE s0, 13
 0B4  20001              CALL 001[wait]
 0B5  01008              LOAD s0, 08[ascii_BS]             ;
 0B6  2D003              OUTPUT s0, 03[uart_data_tx]
 0B7  2F013              STORE s0, 13
 0B8  20001              CALL 001[wait]
 0B9  01008              LOAD s0, 08[ascii_BS]             ;
 0BA  2D003              OUTPUT s0, 03[uart_data_tx]
 0BB  2F013              STORE s0, 13
 0BC  20001              CALL 001[wait]
 0BD  01008              LOAD s0, 08[ascii_BS]             ;
 0BE  2D003              OUTPUT s0, 03[uart_data_tx]
 0BF  2F013              STORE s0, 13
 0C0  20001              CALL 001[wait]
 0C1  01008              LOAD s0, 08[ascii_BS]             ;
 0C2  2D003              OUTPUT s0, 03[uart_data_tx]
 0C3  2F013              STORE s0, 13
 0C4  20001              CALL 001[wait]
 0C5  01008              LOAD s0, 08[ascii_BS]             ;
 0C6  2D003              OUTPUT s0, 03[uart_data_tx]
 0C7  20001              CALL 001[wait]
 0C8  01008              LOAD s0, 08[ascii_BS]             ;
 0C9  2D003              OUTPUT s0, 03[uart_data_tx]
 0CA  20001              CALL 001[wait]
 0CB  01008              LOAD s0, 08[ascii_BS]             ;
 0CC  2D003              OUTPUT s0, 03[uart_data_tx]
 0CD  20001              CALL 001[wait]
 0CE  01008              LOAD s0, 08[ascii_BS]             ;
 0CF  2D003              OUTPUT s0, 03[uart_data_tx]
 0D0  20001              CALL 001[wait]
 0D1  01008              LOAD s0, 08[ascii_BS]             ;
 0D2  2D003              OUTPUT s0, 03[uart_data_tx]
 0D3  20001              CALL 001[wait]
 0D4  01008              LOAD s0, 08[ascii_BS]             ;
 0D5  2D003              OUTPUT s0, 03[uart_data_tx]
 0D6  20001              CALL 001[wait]
 0D7  01008              LOAD s0, 08[ascii_BS]             ;
 0D8  2D003              OUTPUT s0, 03[uart_data_tx]
 0D9  20001              CALL 001[wait]
 0DA  01008              LOAD s0, 08[ascii_BS]             ;
 0DB  2D003              OUTPUT s0, 03[uart_data_tx]
 0DC  20001              CALL 001[wait]
 0DD  01008              LOAD s0, 08[ascii_BS]             ;
 0DE  2D003              OUTPUT s0, 03[uart_data_tx]
 0DF  20001              CALL 001[wait]
 0E0  01008              LOAD s0, 08[ascii_BS]             ;
 0E1  2D003              OUTPUT s0, 03[uart_data_tx]
 0E2  20001              CALL 001[wait]
 0E3  01008              LOAD s0, 08[ascii_BS]             ;
 0E4  2D003              OUTPUT s0, 03[uart_data_tx]
 0E5  20001              CALL 001[wait]
 0E6  01008              LOAD s0, 08[ascii_BS]             ;
 0E7  2D003              OUTPUT s0, 03[uart_data_tx]
 0E8  20001              CALL 001[wait]
 0E9  01008              LOAD s0, 08[ascii_BS]             ;
 0EA  2D003              OUTPUT s0, 03[uart_data_tx]
 0EB  20001              CALL 001[wait]
 0EC  01008              LOAD s0, 08[ascii_BS]             ;
 0ED  2D003              OUTPUT s0, 03[uart_data_tx]
 0EE  20001              CALL 001[wait]
 0EF  01008              LOAD s0, 08[ascii_BS]             ;
 0F0  2D003              OUTPUT s0, 03[uart_data_tx]
 0F1  20001              CALL 001[wait]
 0F2  01008              LOAD s0, 08[ascii_BS]             ;
 0F3  2D003              OUTPUT s0, 03[uart_data_tx]
 0F4  20001              CALL 001[wait]
 0F5  01008              LOAD s0, 08[ascii_BS]             ;
 0F6  2D003              OUTPUT s0, 03[uart_data_tx]
 0F7  20001              CALL 001[wait]
 0F8  01008              LOAD s0, 08[ascii_BS]             ;
 0F9  2D003              OUTPUT s0, 03[uart_data_tx]
 0FA  20001              CALL 001[wait]
 0FB  0104D              LOAD s0, 4D[ascii_M]              ;M
 0FC  2D003              OUTPUT s0, 03[uart_data_tx]
 0FD  20001              CALL 001[wait]
 0FE  01065              LOAD s0, 65[ascii_e]              ;e
 0FF  2D003              OUTPUT s0, 03[uart_data_tx]
 100  20001              CALL 001[wait]
 101  0106E              LOAD s0, 6E[ascii_n]              ;n
 102  2D003              OUTPUT s0, 03[uart_data_tx]
 103  20001              CALL 001[wait]
 104  01075              LOAD s0, 75[ascii_u]              ;u
 105  2D003              OUTPUT s0, 03[uart_data_tx]
 106  20001              CALL 001[wait]
 107  01020              LOAD s0, 20[ascii_SPACE]          ;
 108  2D003              OUTPUT s0, 03[uart_data_tx]
 109  20001              CALL 001[wait]
 10A  0104F              LOAD s0, 4F[ascii_O]              ;O
 10B  2D003              OUTPUT s0, 03[uart_data_tx]
 10C  20001              CALL 001[wait]
 10D  01070              LOAD s0, 70[ascii_p]              ;p
 10E  2D003              OUTPUT s0, 03[uart_data_tx]
 10F  20001              CALL 001[wait]
 110  01074              LOAD s0, 74[ascii_t]              ;t
 111  2D003              OUTPUT s0, 03[uart_data_tx]
 112  20001              CALL 001[wait]
 113  01069              LOAD s0, 69[ascii_i]              ;i
 114  2D003              OUTPUT s0, 03[uart_data_tx]
 115  20001              CALL 001[wait]
 116  0106F              LOAD s0, 6F[ascii_o]              ;o
 117  2D003              OUTPUT s0, 03[uart_data_tx]
 118  20001              CALL 001[wait]
 119  0106E              LOAD s0, 6E[ascii_n]              ;n
 11A  2D003              OUTPUT s0, 03[uart_data_tx]
 11B  20001              CALL 001[wait]
 11C  01073              LOAD s0, 73[ascii_s]              ;s
 11D  2D003              OUTPUT s0, 03[uart_data_tx]
 11E  20001              CALL 001[wait]
 11F  0103A              LOAD s0, 3A[ascii_COLON]          ;:
 120  2D003              OUTPUT s0, 03[uart_data_tx]
 121  20001              CALL 001[wait]
 122  0100A              LOAD s0, 0A[ascii_LF]             ;
 123  2D003              OUTPUT s0, 03[uart_data_tx]
 124  20001              CALL 001[wait]
 125  01008              LOAD s0, 08[ascii_BS]             ;
 126  2D003              OUTPUT s0, 03[uart_data_tx]
 127  20001              CALL 001[wait]
 128  01008              LOAD s0, 08[ascii_BS]             ;
 129  2D003              OUTPUT s0, 03[uart_data_tx]
 12A  20001              CALL 001[wait]
 12B  01008              LOAD s0, 08[ascii_BS]             ;
 12C  2D003              OUTPUT s0, 03[uart_data_tx]
 12D  20001              CALL 001[wait]
 12E  01008              LOAD s0, 08[ascii_BS]             ;
 12F  2D003              OUTPUT s0, 03[uart_data_tx]
 130  20001              CALL 001[wait]
 131  01008              LOAD s0, 08[ascii_BS]             ;
 132  2D003              OUTPUT s0, 03[uart_data_tx]
 133  20001              CALL 001[wait]
 134  01008              LOAD s0, 08[ascii_BS]             ;
 135  2D003              OUTPUT s0, 03[uart_data_tx]
 136  20001              CALL 001[wait]
 137  01008              LOAD s0, 08[ascii_BS]             ;
 138  2D003              OUTPUT s0, 03[uart_data_tx]
 139  20001              CALL 001[wait]
 13A  01008              LOAD s0, 08[ascii_BS]             ;
 13B  2D003              OUTPUT s0, 03[uart_data_tx]
 13C  20001              CALL 001[wait]
 13D  01008              LOAD s0, 08[ascii_BS]             ;
 13E  2D003              OUTPUT s0, 03[uart_data_tx]
 13F  20001              CALL 001[wait]
 140  01008              LOAD s0, 08[ascii_BS]             ;
 141  2D003              OUTPUT s0, 03[uart_data_tx]
 142  20001              CALL 001[wait]
 143  01008              LOAD s0, 08[ascii_BS]             ;
 144  2D003              OUTPUT s0, 03[uart_data_tx]
 145  20001              CALL 001[wait]
 146  01008              LOAD s0, 08[ascii_BS]             ;
 147  2D003              OUTPUT s0, 03[uart_data_tx]
 148  20001              CALL 001[wait]
 149  01008              LOAD s0, 08[ascii_BS]             ;
 14A  2D003              OUTPUT s0, 03[uart_data_tx]
 14B  20001              CALL 001[wait]
 14C  01031              LOAD s0, 31[ascii_1]              ;1
 14D  2D003              OUTPUT s0, 03[uart_data_tx]
 14E  20001              CALL 001[wait]
 14F  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 150  2D003              OUTPUT s0, 03[uart_data_tx]
 151  20001              CALL 001[wait]
 152  01029              LOAD s0, 29[ascii_RPAREN]         ;)
 153  2D003              OUTPUT s0, 03[uart_data_tx]
 154  20001              CALL 001[wait]
 155  01020              LOAD s0, 20[ascii_SPACE]          ;
 156  2D003              OUTPUT s0, 03[uart_data_tx]
 157  20001              CALL 001[wait]
 158  01050              LOAD s0, 50[ascii_P]              ;P
 159  2D003              OUTPUT s0, 03[uart_data_tx]
 15A  20001              CALL 001[wait]
 15B  0106C              LOAD s0, 6C[ascii_l]              ;l
 15C  2D003              OUTPUT s0, 03[uart_data_tx]
 15D  20001              CALL 001[wait]
 15E  01061              LOAD s0, 61[ascii_a]              ;a
 15F  2D003              OUTPUT s0, 03[uart_data_tx]
 160  20001              CALL 001[wait]
 161  01079              LOAD s0, 79[ascii_y]              ;y
 162  2D003              OUTPUT s0, 03[uart_data_tx]
 163  20001              CALL 001[wait]
 164  01020              LOAD s0, 20[ascii_SPACE]          ;
 165  2D003              OUTPUT s0, 03[uart_data_tx]
 166  20001              CALL 001[wait]
 167  01061              LOAD s0, 61[ascii_a]              ;a
 168  2D003              OUTPUT s0, 03[uart_data_tx]
 169  20001              CALL 001[wait]
 16A  01020              LOAD s0, 20[ascii_SPACE]          ;
 16B  2D003              OUTPUT s0, 03[uart_data_tx]
 16C  20001              CALL 001[wait]
 16D  0104D              LOAD s0, 4D[ascii_M]              ;M
 16E  2D003              OUTPUT s0, 03[uart_data_tx]
 16F  20001              CALL 001[wait]
 170  01065              LOAD s0, 65[ascii_e]              ;e
 171  2D003              OUTPUT s0, 03[uart_data_tx]
 172  20001              CALL 001[wait]
 173  01073              LOAD s0, 73[ascii_s]              ;s
 174  2D003              OUTPUT s0, 03[uart_data_tx]
 175  20001              CALL 001[wait]
 176  01073              LOAD s0, 73[ascii_s]              ;s
 177  2D003              OUTPUT s0, 03[uart_data_tx]
 178  20001              CALL 001[wait]
 179  01061              LOAD s0, 61[ascii_a]              ;a
 17A  2D003              OUTPUT s0, 03[uart_data_tx]
 17B  20001              CALL 001[wait]
 17C  01067              LOAD s0, 67[ascii_g]              ;g
 17D  2D003              OUTPUT s0, 03[uart_data_tx]
 17E  20001              CALL 001[wait]
 17F  01065              LOAD s0, 65[ascii_e]              ;e
 180  2D003              OUTPUT s0, 03[uart_data_tx]
 181  20001              CALL 001[wait]
 182  0100A              LOAD s0, 0A[ascii_LF]             ;
 183  2D003              OUTPUT s0, 03[uart_data_tx]
 184  20001              CALL 001[wait]
 185  01008              LOAD s0, 08[ascii_BS]             ;
 186  2D003              OUTPUT s0, 03[uart_data_tx]
 187  20001              CALL 001[wait]
 188  01008              LOAD s0, 08[ascii_BS]             ;
 189  2D003              OUTPUT s0, 03[uart_data_tx]
 18A  20001              CALL 001[wait]
 18B  01008              LOAD s0, 08[ascii_BS]             ;
 18C  2D003              OUTPUT s0, 03[uart_data_tx]
 18D  20001              CALL 001[wait]
 18E  01008              LOAD s0, 08[ascii_BS]             ;
 18F  2D003              OUTPUT s0, 03[uart_data_tx]
 190  20001              CALL 001[wait]
 191  01008              LOAD s0, 08[ascii_BS]             ;
 192  2D003              OUTPUT s0, 03[uart_data_tx]
 193  20001              CALL 001[wait]
 194  01008              LOAD s0, 08[ascii_BS]             ;
 195  2D003              OUTPUT s0, 03[uart_data_tx]
 196  20001              CALL 001[wait]
 197  01008              LOAD s0, 08[ascii_BS]             ;
 198  2D003              OUTPUT s0, 03[uart_data_tx]
 199  20001              CALL 001[wait]
 19A  01008              LOAD s0, 08[ascii_BS]             ;
 19B  2D003              OUTPUT s0, 03[uart_data_tx]
 19C  20001              CALL 001[wait]
 19D  01008              LOAD s0, 08[ascii_BS]             ;
 19E  2D003              OUTPUT s0, 03[uart_data_tx]
 19F  20001              CALL 001[wait]
 1A0  01008              LOAD s0, 08[ascii_BS]             ;
 1A1  2D003              OUTPUT s0, 03[uart_data_tx]
 1A2  20001              CALL 001[wait]
 1A3  01008              LOAD s0, 08[ascii_BS]             ;
 1A4  2D003              OUTPUT s0, 03[uart_data_tx]
 1A5  20001              CALL 001[wait]
 1A6  01008              LOAD s0, 08[ascii_BS]             ;
 1A7  2D003              OUTPUT s0, 03[uart_data_tx]
 1A8  20001              CALL 001[wait]
 1A9  01008              LOAD s0, 08[ascii_BS]             ;
 1AA  2D003              OUTPUT s0, 03[uart_data_tx]
 1AB  20001              CALL 001[wait]
 1AC  01008              LOAD s0, 08[ascii_BS]             ;
 1AD  2D003              OUTPUT s0, 03[uart_data_tx]
 1AE  20001              CALL 001[wait]
 1AF  01008              LOAD s0, 08[ascii_BS]             ;
 1B0  2D003              OUTPUT s0, 03[uart_data_tx]
 1B1  20001              CALL 001[wait]
 1B2  01008              LOAD s0, 08[ascii_BS]             ;
 1B3  2D003              OUTPUT s0, 03[uart_data_tx]
 1B4  20001              CALL 001[wait]
 1B5  01008              LOAD s0, 08[ascii_BS]             ;
 1B6  2D003              OUTPUT s0, 03[uart_data_tx]
 1B7  20001              CALL 001[wait]
 1B8  01008              LOAD s0, 08[ascii_BS]             ;
 1B9  2D003              OUTPUT s0, 03[uart_data_tx]
 1BA  20001              CALL 001[wait]
 1BB  01032              LOAD s0, 32[ascii_2]              ;2
 1BC  2D003              OUTPUT s0, 03[uart_data_tx]
 1BD  20001              CALL 001[wait]
 1BE  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 1BF  2D003              OUTPUT s0, 03[uart_data_tx]
 1C0  20001              CALL 001[wait]
 1C1  01029              LOAD s0, 29[ascii_RPAREN]         ;)
 1C2  2D003              OUTPUT s0, 03[uart_data_tx]
 1C3  20001              CALL 001[wait]
 1C4  01020              LOAD s0, 20[ascii_SPACE]          ;
 1C5  2D003              OUTPUT s0, 03[uart_data_tx]
 1C6  20001              CALL 001[wait]
 1C7  01052              LOAD s0, 52[ascii_R]              ;R
 1C8  2D003              OUTPUT s0, 03[uart_data_tx]
 1C9  20001              CALL 001[wait]
 1CA  01065              LOAD s0, 65[ascii_e]              ;e
 1CB  2D003              OUTPUT s0, 03[uart_data_tx]
 1CC  20001              CALL 001[wait]
 1CD  01063              LOAD s0, 63[ascii_c]              ;c
 1CE  2D003              OUTPUT s0, 03[uart_data_tx]
 1CF  20001              CALL 001[wait]
 1D0  0106F              LOAD s0, 6F[ascii_o]              ;o
 1D1  2D003              OUTPUT s0, 03[uart_data_tx]
 1D2  20001              CALL 001[wait]
 1D3  01072              LOAD s0, 72[ascii_r]              ;r
 1D4  2D003              OUTPUT s0, 03[uart_data_tx]
 1D5  20001              CALL 001[wait]
 1D6  01064              LOAD s0, 64[ascii_d]              ;d
 1D7  2D003              OUTPUT s0, 03[uart_data_tx]
 1D8  20001              CALL 001[wait]
 1D9  01020              LOAD s0, 20[ascii_SPACE]          ;
 1DA  2D003              OUTPUT s0, 03[uart_data_tx]
 1DB  20001              CALL 001[wait]
 1DC  01061              LOAD s0, 61[ascii_a]              ;a
 1DD  2D003              OUTPUT s0, 03[uart_data_tx]
 1DE  20001              CALL 001[wait]
 1DF  01020              LOAD s0, 20[ascii_SPACE]          ;
 1E0  2D003              OUTPUT s0, 03[uart_data_tx]
 1E1  20001              CALL 001[wait]
 1E2  0104D              LOAD s0, 4D[ascii_M]              ;M
 1E3  2D003              OUTPUT s0, 03[uart_data_tx]
 1E4  20001              CALL 001[wait]
 1E5  01065              LOAD s0, 65[ascii_e]              ;e
 1E6  2D003              OUTPUT s0, 03[uart_data_tx]
 1E7  20001              CALL 001[wait]
 1E8  01073              LOAD s0, 73[ascii_s]              ;s
 1E9  2D003              OUTPUT s0, 03[uart_data_tx]
 1EA  20001              CALL 001[wait]
 1EB  01073              LOAD s0, 73[ascii_s]              ;s
 1EC  2D003              OUTPUT s0, 03[uart_data_tx]
 1ED  20001              CALL 001[wait]
 1EE  01061              LOAD s0, 61[ascii_a]              ;a
 1EF  2D003              OUTPUT s0, 03[uart_data_tx]
 1F0  20001              CALL 001[wait]
 1F1  01067              LOAD s0, 67[ascii_g]              ;g
 1F2  2D003              OUTPUT s0, 03[uart_data_tx]
 1F3  20001              CALL 001[wait]
 1F4  01065              LOAD s0, 65[ascii_e]              ;e
 1F5  2D003              OUTPUT s0, 03[uart_data_tx]
 1F6  20001              CALL 001[wait]
 1F7  0100A              LOAD s0, 0A[ascii_LF]             ;
 1F8  2D003              OUTPUT s0, 03[uart_data_tx]
 1F9  20001              CALL 001[wait]
 1FA  01008              LOAD s0, 08[ascii_BS]             ;
 1FB  2D003              OUTPUT s0, 03[uart_data_tx]
 1FC  20001              CALL 001[wait]
 1FD  01008              LOAD s0, 08[ascii_BS]             ;
 1FE  2D003              OUTPUT s0, 03[uart_data_tx]
 1FF  20001              CALL 001[wait]
 200  01008              LOAD s0, 08[ascii_BS]             ;
 201  2D003              OUTPUT s0, 03[uart_data_tx]
 202  20001              CALL 001[wait]
 203  01008              LOAD s0, 08[ascii_BS]             ;
 204  2D003              OUTPUT s0, 03[uart_data_tx]
 205  20001              CALL 001[wait]
 206  01008              LOAD s0, 08[ascii_BS]             ;
 207  2D003              OUTPUT s0, 03[uart_data_tx]
 208  20001              CALL 001[wait]
 209  01008              LOAD s0, 08[ascii_BS]             ;
 20A  2D003              OUTPUT s0, 03[uart_data_tx]
 20B  20001              CALL 001[wait]
 20C  01008              LOAD s0, 08[ascii_BS]             ;
 20D  2D003              OUTPUT s0, 03[uart_data_tx]
 20E  20001              CALL 001[wait]
 20F  01008              LOAD s0, 08[ascii_BS]             ;
 210  2D003              OUTPUT s0, 03[uart_data_tx]
 211  20001              CALL 001[wait]
 212  01008              LOAD s0, 08[ascii_BS]             ;
 213  2D003              OUTPUT s0, 03[uart_data_tx]
 214  20001              CALL 001[wait]
 215  01008              LOAD s0, 08[ascii_BS]             ;
 216  2D003              OUTPUT s0, 03[uart_data_tx]
 217  20001              CALL 001[wait]
 218  01008              LOAD s0, 08[ascii_BS]             ;
 219  2D003              OUTPUT s0, 03[uart_data_tx]
 21A  20001              CALL 001[wait]
 21B  01008              LOAD s0, 08[ascii_BS]             ;
 21C  2D003              OUTPUT s0, 03[uart_data_tx]
 21D  20001              CALL 001[wait]
 21E  01008              LOAD s0, 08[ascii_BS]             ;
 21F  2D003              OUTPUT s0, 03[uart_data_tx]
 220  20001              CALL 001[wait]
 221  01008              LOAD s0, 08[ascii_BS]             ;
 222  2D003              OUTPUT s0, 03[uart_data_tx]
 223  20001              CALL 001[wait]
 224  01008              LOAD s0, 08[ascii_BS]             ;
 225  2D003              OUTPUT s0, 03[uart_data_tx]
 226  20001              CALL 001[wait]
 227  01008              LOAD s0, 08[ascii_BS]             ;
 228  2D003              OUTPUT s0, 03[uart_data_tx]
 229  20001              CALL 001[wait]
 22A  01008              LOAD s0, 08[ascii_BS]             ;
 22B  2D003              OUTPUT s0, 03[uart_data_tx]
 22C  20001              CALL 001[wait]
 22D  01008              LOAD s0, 08[ascii_BS]             ;
 22E  2D003              OUTPUT s0, 03[uart_data_tx]
 22F  20001              CALL 001[wait]
 230  01008              LOAD s0, 08[ascii_BS]             ;
 231  2D003              OUTPUT s0, 03[uart_data_tx]
 232  20001              CALL 001[wait]
 233  01008              LOAD s0, 08[ascii_BS]             ;
 234  2D003              OUTPUT s0, 03[uart_data_tx]
 235  20001              CALL 001[wait]
 236  01033              LOAD s0, 33[ascii_3]              ;3
 237  2D003              OUTPUT s0, 03[uart_data_tx]
 238  20001              CALL 001[wait]
 239  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 23A  2D003              OUTPUT s0, 03[uart_data_tx]
 23B  20001              CALL 001[wait]
 23C  01029              LOAD s0, 29[ascii_RPAREN]         ;)
 23D  2D003              OUTPUT s0, 03[uart_data_tx]
 23E  20001              CALL 001[wait]
 23F  01020              LOAD s0, 20[ascii_SPACE]          ;
 240  2D003              OUTPUT s0, 03[uart_data_tx]
 241  20001              CALL 001[wait]
 242  01044              LOAD s0, 44[ascii_D]              ;D
 243  2D003              OUTPUT s0, 03[uart_data_tx]
 244  20001              CALL 001[wait]
 245  01065              LOAD s0, 65[ascii_e]              ;e
 246  2D003              OUTPUT s0, 03[uart_data_tx]
 247  20001              CALL 001[wait]
 248  0106C              LOAD s0, 6C[ascii_l]              ;l
 249  2D003              OUTPUT s0, 03[uart_data_tx]
 24A  20001              CALL 001[wait]
 24B  01065              LOAD s0, 65[ascii_e]              ;e
 24C  2D003              OUTPUT s0, 03[uart_data_tx]
 24D  20001              CALL 001[wait]
 24E  01074              LOAD s0, 74[ascii_t]              ;t
 24F  2D003              OUTPUT s0, 03[uart_data_tx]
 250  20001              CALL 001[wait]
 251  01065              LOAD s0, 65[ascii_e]              ;e
 252  2D003              OUTPUT s0, 03[uart_data_tx]
 253  20001              CALL 001[wait]
 254  01020              LOAD s0, 20[ascii_SPACE]          ;
 255  2D003              OUTPUT s0, 03[uart_data_tx]
 256  20001              CALL 001[wait]
 257  01061              LOAD s0, 61[ascii_a]              ;a
 258  2D003              OUTPUT s0, 03[uart_data_tx]
 259  20001              CALL 001[wait]
 25A  01020              LOAD s0, 20[ascii_SPACE]          ;
 25B  2D003              OUTPUT s0, 03[uart_data_tx]
 25C  20001              CALL 001[wait]
 25D  0104D              LOAD s0, 4D[ascii_M]              ;M
 25E  2D003              OUTPUT s0, 03[uart_data_tx]
 25F  20001              CALL 001[wait]
 260  01065              LOAD s0, 65[ascii_e]              ;e
 261  2D003              OUTPUT s0, 03[uart_data_tx]
 262  20001              CALL 001[wait]
 263  01073              LOAD s0, 73[ascii_s]              ;s
 264  2D003              OUTPUT s0, 03[uart_data_tx]
 265  20001              CALL 001[wait]
 266  01073              LOAD s0, 73[ascii_s]              ;s
 267  2D003              OUTPUT s0, 03[uart_data_tx]
 268  20001              CALL 001[wait]
 269  01061              LOAD s0, 61[ascii_a]              ;a
 26A  2D003              OUTPUT s0, 03[uart_data_tx]
 26B  20001              CALL 001[wait]
 26C  01067              LOAD s0, 67[ascii_g]              ;g
 26D  2D003              OUTPUT s0, 03[uart_data_tx]
 26E  20001              CALL 001[wait]
 26F  01065              LOAD s0, 65[ascii_e]              ;e
 270  2D003              OUTPUT s0, 03[uart_data_tx]
 271  20001              CALL 001[wait]
 272  0100A              LOAD s0, 0A[ascii_LF]             ;
 273  2D003              OUTPUT s0, 03[uart_data_tx]
 274  20001              CALL 001[wait]
 275  01008              LOAD s0, 08[ascii_BS]             ;
 276  2D003              OUTPUT s0, 03[uart_data_tx]
 277  20001              CALL 001[wait]
 278  01008              LOAD s0, 08[ascii_BS]             ;
 279  2D003              OUTPUT s0, 03[uart_data_tx]
 27A  20001              CALL 001[wait]
 27B  01008              LOAD s0, 08[ascii_BS]             ;
 27C  2D003              OUTPUT s0, 03[uart_data_tx]
 27D  20001              CALL 001[wait]
 27E  01008              LOAD s0, 08[ascii_BS]             ;
 27F  2D003              OUTPUT s0, 03[uart_data_tx]
 280  20001              CALL 001[wait]
 281  01008              LOAD s0, 08[ascii_BS]             ;
 282  2D003              OUTPUT s0, 03[uart_data_tx]
 283  20001              CALL 001[wait]
 284  01008              LOAD s0, 08[ascii_BS]             ;
 285  2D003              OUTPUT s0, 03[uart_data_tx]
 286  20001              CALL 001[wait]
 287  01008              LOAD s0, 08[ascii_BS]             ;
 288  2D003              OUTPUT s0, 03[uart_data_tx]
 289  20001              CALL 001[wait]
 28A  01008              LOAD s0, 08[ascii_BS]             ;
 28B  2D003              OUTPUT s0, 03[uart_data_tx]
 28C  20001              CALL 001[wait]
 28D  01008              LOAD s0, 08[ascii_BS]             ;
 28E  2D003              OUTPUT s0, 03[uart_data_tx]
 28F  20001              CALL 001[wait]
 290  01008              LOAD s0, 08[ascii_BS]             ;
 291  2D003              OUTPUT s0, 03[uart_data_tx]
 292  20001              CALL 001[wait]
 293  01008              LOAD s0, 08[ascii_BS]             ;
 294  2D003              OUTPUT s0, 03[uart_data_tx]
 295  20001              CALL 001[wait]
 296  01008              LOAD s0, 08[ascii_BS]             ;
 297  2D003              OUTPUT s0, 03[uart_data_tx]
 298  20001              CALL 001[wait]
 299  01008              LOAD s0, 08[ascii_BS]             ;
 29A  2D003              OUTPUT s0, 03[uart_data_tx]
 29B  20001              CALL 001[wait]
 29C  01008              LOAD s0, 08[ascii_BS]             ;
 29D  2D003              OUTPUT s0, 03[uart_data_tx]
 29E  20001              CALL 001[wait]
 29F  01008              LOAD s0, 08[ascii_BS]             ;
 2A0  2D003              OUTPUT s0, 03[uart_data_tx]
 2A1  20001              CALL 001[wait]
 2A2  01008              LOAD s0, 08[ascii_BS]             ;
 2A3  2D003              OUTPUT s0, 03[uart_data_tx]
 2A4  20001              CALL 001[wait]
 2A5  01008              LOAD s0, 08[ascii_BS]             ;
 2A6  2D003              OUTPUT s0, 03[uart_data_tx]
 2A7  20001              CALL 001[wait]
 2A8  01008              LOAD s0, 08[ascii_BS]             ;
 2A9  2D003              OUTPUT s0, 03[uart_data_tx]
 2AA  20001              CALL 001[wait]
 2AB  01008              LOAD s0, 08[ascii_BS]             ;
 2AC  2D003              OUTPUT s0, 03[uart_data_tx]
 2AD  20001              CALL 001[wait]
 2AE  01008              LOAD s0, 08[ascii_BS]             ;
 2AF  2D003              OUTPUT s0, 03[uart_data_tx]
 2B0  20001              CALL 001[wait]
 2B1  01034              LOAD s0, 34[ascii_4]              ;4
 2B2  2D003              OUTPUT s0, 03[uart_data_tx]
 2B3  20001              CALL 001[wait]
 2B4  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 2B5  2D003              OUTPUT s0, 03[uart_data_tx]
 2B6  20001              CALL 001[wait]
 2B7  01029              LOAD s0, 29[ascii_RPAREN]         ;)
 2B8  2D003              OUTPUT s0, 03[uart_data_tx]
 2B9  20001              CALL 001[wait]
 2BA  01020              LOAD s0, 20[ascii_SPACE]          ;
 2BB  2D003              OUTPUT s0, 03[uart_data_tx]
 2BC  20001              CALL 001[wait]
 2BD  01044              LOAD s0, 44[ascii_D]              ;D
 2BE  2D003              OUTPUT s0, 03[uart_data_tx]
 2BF  20001              CALL 001[wait]
 2C0  01065              LOAD s0, 65[ascii_e]              ;e
 2C1  2D003              OUTPUT s0, 03[uart_data_tx]
 2C2  20001              CALL 001[wait]
 2C3  0106C              LOAD s0, 6C[ascii_l]              ;l
 2C4  2D003              OUTPUT s0, 03[uart_data_tx]
 2C5  20001              CALL 001[wait]
 2C6  01065              LOAD s0, 65[ascii_e]              ;e
 2C7  2D003              OUTPUT s0, 03[uart_data_tx]
 2C8  20001              CALL 001[wait]
 2C9  01074              LOAD s0, 74[ascii_t]              ;t
 2CA  2D003              OUTPUT s0, 03[uart_data_tx]
 2CB  20001              CALL 001[wait]
 2CC  01065              LOAD s0, 65[ascii_e]              ;e
 2CD  2D003              OUTPUT s0, 03[uart_data_tx]
 2CE  20001              CALL 001[wait]
 2CF  01020              LOAD s0, 20[ascii_SPACE]          ;
 2D0  2D003              OUTPUT s0, 03[uart_data_tx]
 2D1  20001              CALL 001[wait]
 2D2  01061              LOAD s0, 61[ascii_a]              ;a
 2D3  2D003              OUTPUT s0, 03[uart_data_tx]
 2D4  20001              CALL 001[wait]
 2D5  0106C              LOAD s0, 6C[ascii_l]              ;l
 2D6  2D003              OUTPUT s0, 03[uart_data_tx]
 2D7  20001              CALL 001[wait]
 2D8  0106C              LOAD s0, 6C[ascii_l]              ;l
 2D9  2D003              OUTPUT s0, 03[uart_data_tx]
 2DA  20001              CALL 001[wait]
 2DB  01020              LOAD s0, 20[ascii_SPACE]          ;
 2DC  2D003              OUTPUT s0, 03[uart_data_tx]
 2DD  20001              CALL 001[wait]
 2DE  0104D              LOAD s0, 4D[ascii_M]              ;M
 2DF  2D003              OUTPUT s0, 03[uart_data_tx]
 2E0  20001              CALL 001[wait]
 2E1  01065              LOAD s0, 65[ascii_e]              ;e
 2E2  2D003              OUTPUT s0, 03[uart_data_tx]
 2E3  20001              CALL 001[wait]
 2E4  01073              LOAD s0, 73[ascii_s]              ;s
 2E5  2D003              OUTPUT s0, 03[uart_data_tx]
 2E6  20001              CALL 001[wait]
 2E7  01073              LOAD s0, 73[ascii_s]              ;s
 2E8  2D003              OUTPUT s0, 03[uart_data_tx]
 2E9  20001              CALL 001[wait]
 2EA  01061              LOAD s0, 61[ascii_a]              ;a
 2EB  2D003              OUTPUT s0, 03[uart_data_tx]
 2EC  20001              CALL 001[wait]
 2ED  01067              LOAD s0, 67[ascii_g]              ;g
 2EE  2D003              OUTPUT s0, 03[uart_data_tx]
 2EF  20001              CALL 001[wait]
 2F0  01065              LOAD s0, 65[ascii_e]              ;e
 2F1  2D003              OUTPUT s0, 03[uart_data_tx]
 2F2  20001              CALL 001[wait]
 2F3  01073              LOAD s0, 73[ascii_s]              ;s
 2F4  2D003              OUTPUT s0, 03[uart_data_tx]
 2F5  20001              CALL 001[wait]
 2F6  0100A              LOAD s0, 0A[ascii_LF]             ;
 2F7  2D003              OUTPUT s0, 03[uart_data_tx]
 2F8  20001              CALL 001[wait]
 2F9  01008              LOAD s0, 08[ascii_BS]             ;
 2FA  2D003              OUTPUT s0, 03[uart_data_tx]
 2FB  20001              CALL 001[wait]
 2FC  01008              LOAD s0, 08[ascii_BS]             ;
 2FD  2D003              OUTPUT s0, 03[uart_data_tx]
 2FE  20001              CALL 001[wait]
 2FF  01008              LOAD s0, 08[ascii_BS]             ;
 300  2D003              OUTPUT s0, 03[uart_data_tx]
 301  20001              CALL 001[wait]
 302  01008              LOAD s0, 08[ascii_BS]             ;
 303  2D003              OUTPUT s0, 03[uart_data_tx]
 304  20001              CALL 001[wait]
 305  01008              LOAD s0, 08[ascii_BS]             ;
 306  2D003              OUTPUT s0, 03[uart_data_tx]
 307  20001              CALL 001[wait]
 308  01008              LOAD s0, 08[ascii_BS]             ;
 309  2D003              OUTPUT s0, 03[uart_data_tx]
 30A  20001              CALL 001[wait]
 30B  01008              LOAD s0, 08[ascii_BS]             ;
 30C  2D003              OUTPUT s0, 03[uart_data_tx]
 30D  20001              CALL 001[wait]
 30E  01008              LOAD s0, 08[ascii_BS]             ;
 30F  2D003              OUTPUT s0, 03[uart_data_tx]
 310  20001              CALL 001[wait]
 311  01008              LOAD s0, 08[ascii_BS]             ;
 312  2D003              OUTPUT s0, 03[uart_data_tx]
 313  20001              CALL 001[wait]
 314  01008              LOAD s0, 08[ascii_BS]             ;
 315  2D003              OUTPUT s0, 03[uart_data_tx]
 316  20001              CALL 001[wait]
 317  01008              LOAD s0, 08[ascii_BS]             ;
 318  2D003              OUTPUT s0, 03[uart_data_tx]
 319  20001              CALL 001[wait]
 31A  01008              LOAD s0, 08[ascii_BS]             ;
 31B  2D003              OUTPUT s0, 03[uart_data_tx]
 31C  20001              CALL 001[wait]
 31D  01008              LOAD s0, 08[ascii_BS]             ;
 31E  2D003              OUTPUT s0, 03[uart_data_tx]
 31F  20001              CALL 001[wait]
 320  01008              LOAD s0, 08[ascii_BS]             ;
 321  2D003              OUTPUT s0, 03[uart_data_tx]
 322  20001              CALL 001[wait]
 323  01008              LOAD s0, 08[ascii_BS]             ;
 324  2D003              OUTPUT s0, 03[uart_data_tx]
 325  20001              CALL 001[wait]
 326  01008              LOAD s0, 08[ascii_BS]             ;
 327  2D003              OUTPUT s0, 03[uart_data_tx]
 328  20001              CALL 001[wait]
 329  01008              LOAD s0, 08[ascii_BS]             ;
 32A  2D003              OUTPUT s0, 03[uart_data_tx]
 32B  20001              CALL 001[wait]
 32C  01008              LOAD s0, 08[ascii_BS]             ;
 32D  2D003              OUTPUT s0, 03[uart_data_tx]
 32E  20001              CALL 001[wait]
 32F  01008              LOAD s0, 08[ascii_BS]             ;
 330  2D003              OUTPUT s0, 03[uart_data_tx]
 331  20001              CALL 001[wait]
 332  01008              LOAD s0, 08[ascii_BS]             ;
 333  2D003              OUTPUT s0, 03[uart_data_tx]
 334  20001              CALL 001[wait]
 335  01008              LOAD s0, 08[ascii_BS]             ;
 336  2D003              OUTPUT s0, 03[uart_data_tx]
 337  20001              CALL 001[wait]
 338  01008              LOAD s0, 08[ascii_BS]             ;
 339  2D003              OUTPUT s0, 03[uart_data_tx]
 33A  20001              CALL 001[wait]
 33B  01008              LOAD s0, 08[ascii_BS]             ;
 33C  2D003              OUTPUT s0, 03[uart_data_tx]
 33D  20001              CALL 001[wait]
 33E  01035              LOAD s0, 35[ascii_5]              ;5
 33F  2D003              OUTPUT s0, 03[uart_data_tx]
 340  20001              CALL 001[wait]
 341  0102E              LOAD s0, 2E[ascii_PERIOD]         ;.
 342  2D003              OUTPUT s0, 03[uart_data_tx]
 343  20001              CALL 001[wait]
 344  01029              LOAD s0, 29[ascii_RPAREN]         ;)
 345  2D003              OUTPUT s0, 03[uart_data_tx]
 346  20001              CALL 001[wait]
 347  01020              LOAD s0, 20[ascii_SPACE]          ;
 348  2D003              OUTPUT s0, 03[uart_data_tx]
 349  20001              CALL 001[wait]
 34A  01056              LOAD s0, 56[ascii_V]              ;V
 34B  2D003              OUTPUT s0, 03[uart_data_tx]
 34C  20001              CALL 001[wait]
 34D  0106F              LOAD s0, 6F[ascii_o]              ;o
 34E  2D003              OUTPUT s0, 03[uart_data_tx]
 34F  20001              CALL 001[wait]
 350  0106C              LOAD s0, 6C[ascii_l]              ;l
 351  2D003              OUTPUT s0, 03[uart_data_tx]
 352  20001              CALL 001[wait]
 353  01075              LOAD s0, 75[ascii_u]              ;u
 354  2D003              OUTPUT s0, 03[uart_data_tx]
 355  20001              CALL 001[wait]
 356  0106D              LOAD s0, 6D[ascii_m]              ;m
 357  2D003              OUTPUT s0, 03[uart_data_tx]
 358  20001              CALL 001[wait]
 359  01065              LOAD s0, 65[ascii_e]              ;e
 35A  2D003              OUTPUT s0, 03[uart_data_tx]
 35B  20001              CALL 001[wait]
 35C  01020              LOAD s0, 20[ascii_SPACE]          ;
 35D  2D003              OUTPUT s0, 03[uart_data_tx]
 35E  20001              CALL 001[wait]
 35F  01043              LOAD s0, 43[ascii_C]              ;C
 360  2D003              OUTPUT s0, 03[uart_data_tx]
 361  20001              CALL 001[wait]
 362  0106F              LOAD s0, 6F[ascii_o]              ;o
 363  2D003              OUTPUT s0, 03[uart_data_tx]
 364  20001              CALL 001[wait]
 365  0106E              LOAD s0, 6E[ascii_n]              ;n
 366  2D003              OUTPUT s0, 03[uart_data_tx]
 367  20001              CALL 001[wait]
 368  01074              LOAD s0, 74[ascii_t]              ;t
 369  2D003              OUTPUT s0, 03[uart_data_tx]
 36A  20001              CALL 001[wait]
 36B  01072              LOAD s0, 72[ascii_r]              ;r
 36C  2D003              OUTPUT s0, 03[uart_data_tx]
 36D  20001              CALL 001[wait]
 36E  0106F              LOAD s0, 6F[ascii_o]              ;o
 36F  2D003              OUTPUT s0, 03[uart_data_tx]
 370  20001              CALL 001[wait]
 371  0106C              LOAD s0, 6C[ascii_l]              ;l
 372  2D003              OUTPUT s0, 03[uart_data_tx]
 373  20001              CALL 001[wait]
 374  0100A              LOAD s0, 0A[ascii_LF]             ;
 375  2D003              OUTPUT s0, 03[uart_data_tx]
 376  20001              CALL 001[wait]
 377  01008              LOAD s0, 08[ascii_BS]             ;
 378  2D003              OUTPUT s0, 03[uart_data_tx]
 379  20001              CALL 001[wait]
 37A  01008              LOAD s0, 08[ascii_BS]             ;
 37B  2D003              OUTPUT s0, 03[uart_data_tx]
 37C  20001              CALL 001[wait]
 37D  01008              LOAD s0, 08[ascii_BS]             ;
 37E  2D003              OUTPUT s0, 03[uart_data_tx]
 37F  20001              CALL 001[wait]
 380  01008              LOAD s0, 08[ascii_BS]             ;
 381  2D003              OUTPUT s0, 03[uart_data_tx]
 382  20001              CALL 001[wait]
 383  01008              LOAD s0, 08[ascii_BS]             ;
 384  2D003              OUTPUT s0, 03[uart_data_tx]
 385  20001              CALL 001[wait]
 386  01008              LOAD s0, 08[ascii_BS]             ;
 387  2D003              OUTPUT s0, 03[uart_data_tx]
 388  20001              CALL 001[wait]
 389  01008              LOAD s0, 08[ascii_BS]             ;
 38A  2D003              OUTPUT s0, 03[uart_data_tx]
 38B  20001              CALL 001[wait]
 38C  01008              LOAD s0, 08[ascii_BS]             ;
 38D  2D003              OUTPUT s0, 03[uart_data_tx]
 38E  20001              CALL 001[wait]
 38F  01008              LOAD s0, 08[ascii_BS]             ;
 390  2D003              OUTPUT s0, 03[uart_data_tx]
 391  20001              CALL 001[wait]
 392  01008              LOAD s0, 08[ascii_BS]             ;
 393  2D003              OUTPUT s0, 03[uart_data_tx]
 394  20001              CALL 001[wait]
 395  01008              LOAD s0, 08[ascii_BS]             ;
 396  2D003              OUTPUT s0, 03[uart_data_tx]
 397  20001              CALL 001[wait]
 398  01008              LOAD s0, 08[ascii_BS]             ;
 399  2D003              OUTPUT s0, 03[uart_data_tx]
 39A  20001              CALL 001[wait]
 39B  01008              LOAD s0, 08[ascii_BS]             ;
 39C  2D003              OUTPUT s0, 03[uart_data_tx]
 39D  20001              CALL 001[wait]
 39E  01008              LOAD s0, 08[ascii_BS]             ;
 39F  2D003              OUTPUT s0, 03[uart_data_tx]
 3A0  20001              CALL 001[wait]
 3A1  01008              LOAD s0, 08[ascii_BS]             ;
 3A2  2D003              OUTPUT s0, 03[uart_data_tx]
 3A3  20001              CALL 001[wait]
 3A4  01008              LOAD s0, 08[ascii_BS]             ;
 3A5  2D003              OUTPUT s0, 03[uart_data_tx]
 3A6  20001              CALL 001[wait]
 3A7  01008              LOAD s0, 08[ascii_BS]             ;
 3A8  2D003              OUTPUT s0, 03[uart_data_tx]
 3A9  20001              CALL 001[wait]
 3AA  01008              LOAD s0, 08[ascii_BS]             ;
 3AB  2D003              OUTPUT s0, 03[uart_data_tx]
 3AC  20001              CALL 001[wait]
 3AD  00000    led_echo: LOAD s0, s0                       ; (nop)
 3AE                     ; Code 2
 3AE                     ; Write code to read the switch state and
 3AE                     ; write it, inverted, to the LED output port.
 3AE  09000              INPUT s0, 00[switches]
 3AF  28000              DISABLE INTERRUPT
 3B0  070FF              XOR s0, FF
 3B1  2D001              OUTPUT s0, 01[leds]
 3B2  28001              ENABLE INTERRUPT
 3B3  223B4              JUMP 3B4[rs232_echo]
 3B4  00000  rs232_echo: LOAD s0, s0                       ; (nop)
 3B5                     ; Code 3
 3B5                     ; Write code to check if a byte has been
 3B5                     ; received by the uart.  If so, write it
 3B5                     ; back to the uart transmit port.  Then...
 3B5                     NAMEREG sF, dr
 3B5                     NAMEREG sE, Data
 3B5             BEGIN1: 
 3B5  09F04              INPUT sF[dr], 04[data_present]
 3B6  0DF01              TEST sF[dr], 01
 3B7  383B9              CALL C, 3B9[SEND]
 3B8  223B5              JUMP 3B5[BEGIN1]
 3B9               SEND: 
 3B9  09E02              INPUT sE[Data], 02[uart_data_rx]
 3BA  1D005              COMPARE s0, 05[buffer_full]
 3BB  2DE03              OUTPUT sE[Data], 03[uart_data_tx]
 3BC  223AD              JUMP 3AD[led_echo]                ; endless loop
 3BD                     ;================================================================
 3BD                     ;
 3BD                     ;================================================================


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\patri\Documents\GitHub\CDA4203L-TeamLGSB\Final Project\picoblaze\program.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   18'd         
 timestamp_minutes 37'd         
 timestamp_seconds 08'd         
 datestamp_year    22'd         
 datestamp_month   4'd          
 datestamp_day     07'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           program.psm
 leds              01           program.psm
 uart_data_rx      02           program.psm
 uart_data_tx      03           program.psm
 data_present      04           program.psm
 buffer_full       05           program.psm
 all_clear         00           program.psm
 all_set           FF           program.psm
 ascii_NUL         00           program.psm
 ascii_SOH         01           program.psm
 ascii_STX         02           program.psm
 ascii_ETX         03           program.psm
 ascii_EOT         04           program.psm
 ascii_ENQ         05           program.psm
 ascii_ACK         06           program.psm
 ascii_BEL         07           program.psm
 ascii_BS          08           program.psm
 ascii_HT          09           program.psm
 ascii_LF          0A           program.psm
 ascii_VT          0B           program.psm
 ascii_FF          0C           program.psm
 ascii_CR          0D           program.psm
 ascii_SO          0E           program.psm
 ascii_SI          0F           program.psm
 ascii_DLE         10           program.psm
 ascii_DC1         11           program.psm
 ascii_DC2         12           program.psm
 ascii_DC3         13           program.psm
 ascii_DC4         14           program.psm
 ascii_NAK         15           program.psm
 ascii_SYN         16           program.psm
 ascii_ETB         17           program.psm
 ascii_CAN         18           program.psm
 ascii_EM          19           program.psm
 ascii_SUB         1A           program.psm
 ascii_ESC         1B           program.psm
 ascii_FS          1C           program.psm
 ascii_GS          1D           program.psm
 ascii_RS          1E           program.psm
 ascii_US          1F           program.psm
 ascii_SPACE       20           program.psm
 ascii_EXCLAIM     21           program.psm
 ascii_DBLQUOT     22           program.psm
 ascii_NUMSIGN     23           program.psm
 ascii_DOLLAR      24           program.psm
 ascii_PERCENT     25           program.psm
 ascii_AMP         26           program.psm
 ascii_SINQUOT     27           program.psm
 ascii_LPAREN      28           program.psm
 ascii_RPAREN      29           program.psm
 ascii_ASTERISK    2A           program.psm
 ascii_PLUS        2B           program.psm
 ascii_COMMA       2C           program.psm
 ascii_MINUS       2D           program.psm
 ascii_PERIOD      2E           program.psm
 ascii_FWDSLASH    2F           program.psm
 ascii_0           30           program.psm
 ascii_1           31           program.psm
 ascii_2           32           program.psm
 ascii_3           33           program.psm
 ascii_4           34           program.psm
 ascii_5           35           program.psm
 ascii_6           36           program.psm
 ascii_7           37           program.psm
 ascii_8           38           program.psm
 ascii_9           39           program.psm
 ascii_COLON       3A           program.psm
 ascii_SEMI        3B           program.psm
 ascii_LESS        3C           program.psm
 ascii_EQUAL       3D           program.psm
 ascii_GREATER     3E           program.psm
 ascii_QUESTION    3F           program.psm
 ascii_CIRCAT      40           program.psm
 ascii_A           41           program.psm
 ascii_B           42           program.psm
 ascii_C           43           program.psm
 ascii_D           44           program.psm
 ascii_E           45           program.psm
 ascii_F           46           program.psm
 ascii_G           47           program.psm
 ascii_H           48           program.psm
 ascii_I           49           program.psm
 ascii_J           4A           program.psm
 ascii_K           4B           program.psm
 ascii_L           4C           program.psm
 ascii_M           4D           program.psm
 ascii_N           4E           program.psm
 ascii_O           4F           program.psm
 ascii_P           50           program.psm
 ascii_Q           51           program.psm
 ascii_R           52           program.psm
 ascii_S           53           program.psm
 ascii_T           54           program.psm
 ascii_U           55           program.psm
 ascii_V           56           program.psm
 ascii_W           57           program.psm
 ascii_X           58           program.psm
 ascii_Y           59           program.psm
 ascii_Z           5A           program.psm
 ascii_LBKT        5B           program.psm
 ascii_BKSLASH     5C           program.psm
 ascii_RBKT        5D           program.psm
 ascii_CARET       5E           program.psm
 ascii_UNDER       5F           program.psm
 ascii_TICK        60           program.psm
 ascii_a           61           program.psm
 ascii_b           62           program.psm
 ascii_c           63           program.psm
 ascii_d           64           program.psm
 ascii_e           65           program.psm
 ascii_f           66           program.psm
 ascii_g           67           program.psm
 ascii_h           68           program.psm
 ascii_i           69           program.psm
 ascii_j           6A           program.psm
 ascii_k           6B           program.psm
 ascii_l           6C           program.psm
 ascii_m           6D           program.psm
 ascii_n           6E           program.psm
 ascii_o           6F           program.psm
 ascii_p           70           program.psm
 ascii_q           71           program.psm
 ascii_r           72           program.psm
 ascii_s           73           program.psm
 ascii_t           74           program.psm
 ascii_u           75           program.psm
 ascii_v           76           program.psm
 ascii_w           77           program.psm
 ascii_x           78           program.psm
 ascii_y           79           program.psm
 ascii_z           7A           program.psm
 ascii_LBRACE      7B           program.psm
 ascii_VBAR        7C           program.psm
 ascii_RBRACE      7D           program.psm
 ascii_TILDE       7E           program.psm
 ascii_DEL         7F           program.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "07 Apr 2022"  
 timestamp$        "18:37:08"     



List of line labels

   Label        Addr  Source PSM File

   wait         001   program.psm
   cold_start   005   program.psm
   led_echo     3AD   program.psm
   rs232_echo   3B4   program.psm
   BEGIN1       3B5   program.psm
   SEND         3B9   program.psm



Instruction usage statistics

 Instruction    Instances

 LOAD            310
 STAR              -

 AND               -
 OR                -
 XOR               1

 ADD               -
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              1
 TESTCY            -
 COMPARE           2
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             4
 OUTPUT          309
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           1
 ENABLE            1
 RETURNI           -

 JUMP              5
 JUMP@             -
 CALL            308
 CALL@             -
 RETURN            1
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
